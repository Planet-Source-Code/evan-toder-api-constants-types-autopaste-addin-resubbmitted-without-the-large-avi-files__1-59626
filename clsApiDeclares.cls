VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "clsApiDeclares"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit


Event ApiToPaste(strApiToPaste As String)


Function ReturnedApiDeclare(strSelectedWord As String) As String

      ' to minimize the number of function names we have
      ' to search, lets break the api list into 3 sections
      ' and access the correct section by the first letter
      ' of the word that is currently selected
      If Left(strSelectedWord, 1) < "g" Then
         ReturnedApiDeclare = returnApiG(strSelectedWord)
      ElseIf Left(strSelectedWord, 1) < "p" Then
         ReturnedApiDeclare = returnApiP(strSelectedWord)
      Else
         ReturnedApiDeclare = returnApiZ(strSelectedWord)
      End If
      
     ' if an api call is returned pass it on to be pasted in the vb ide
      If Len(ReturnedApiDeclare) > 0 Then RaiseEvent ApiToPaste(ReturnedApiDeclare)
 
End Function

'---------------------------------------------------------------------------------
' list of all the api's from letters a-g
'---------------------------------------------------------------------------------
Private Function returnApiG(strApi As String) As String

Dim sval As String

Select Case strApi
   Case Is = "avifileinfo"
       sval = "Declare Function AVIFileInfo Lib " & Chr(34) & "avifil32" & Chr(34) & " Alias " & Chr(34) & "AVIFileInfoA" & Chr(34) & " (ByVal pfile As Long, pfi As AVIFILEINFO, ByVal lSize As Long) As Long"
   Case Is = "lclose"
       sval = "Declare Function lClose Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "_lclose" & Chr(34) & " (ByVal hFile As Long) As Long"
   Case Is = "lopen"
       sval = "Declare Function lOpen Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "_lopen" & Chr(34) & " (ByVal lpPathName As String, ByVal iReadWrite As Long) As Long"
   Case Is = "addaccessallowedace"
       sval = "Declare Function AddAccessAllowedAce Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (pAcl As Byte, ByVal dwAceRevision As Long, ByVal AccessMask As Long, pSid As Byte) As Long"
   Case Is = "addaccessdeniedace"
       sval = "Declare Function AddAccessDeniedAce Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (pAcl As Byte, ByVal dwAceRevision As Long, ByVal AccessMask As Long, pSid As Byte) As Long"
   Case Is = "addace"
       sval = "Declare Function AddAce Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal pAcl As Long, ByVal dwAceRevision As Long, ByVal dwStartingAceIndex As Long, ByVal pAceList As Long, ByVal nAceListLength As Long) As Long"
   Case Is = "addfontresource"
       sval = "Declare Function AddFontResource Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "AddFontResourceA" & Chr(34) & " (ByVal lpFileName As String) As Long"
   Case Is = "adjusttokenprivileges"
       sval = "Declare Function AdjustTokenPrivileges Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "AdjustTokenPrivileges" & Chr(34) & " (ByVal TokenHandle As Long, ByVal DisableAllPrivileges As Long, NewState As TOKEN_PRIVILEGES, ByVal BufferLength As Long, PreviousState As TOKEN_PRIVILEGES, ReturnLength As Long) As Long"
   Case Is = "adjustwindowrect"
       sval = "Declare Function AdjustWindowRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "AdjustWindowRect" & Chr(34) & " (lpRect As RECT, ByVal dwStyle As Long, ByVal bMenu As Long) As Long"
   Case Is = "adjustwindowrectex"
       sval = "Declare Function AdjustWindowRectEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "AdjustWindowRectEx" & Chr(34) & " (lpRect As RECT, ByVal dsStyle As Long, ByVal bMenu As Long, ByVal dwEsStyle As Long) As Long"
   Case Is = "allocateandinitializesid"
       sval = "Declare Function AllocateAndInitializeSid Lib " & Chr(34) & "Advapi32" & Chr(34) & " (pIdentifierAuthority As SID_IDENTIFIER_AUTHORITY, ByVal nSubAuthorityCount As Byte, ByVal nSubAuthority0 As Long, ByVal nSubAuthority1 As Long, ByVal nSubAuthority2 As Long, ByVal nSubAuthority3 As Long, ByVal nSubAuthority4 As Long, ByVal nSubAuthority5 As Long, ByVal nSubAuthority6 As Long, ByVal nSubAuthority7 As Long, lpPSid As Long) As Long"
   Case Is = "allocconsole"
       sval = "Declare Function AllocConsole Lib " & Chr(34) & "kernel32" & Chr(34) & " () As Long"
   Case Is = "allowsetforegroundwindow"
       sval = "Declare Function AllowSetForegroundWindow Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal dwProcessId As Long) As Long"
   Case Is = "alphablend"
       sval = "Declare Function AlphaBlend Lib " & Chr(34) & "msimg32.dll" & Chr(34) & " (ByVal hdc As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal hdc As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal BLENDFUNCT As Long) As Long"
   Case Is = "anglearc"
       sval = "Declare Function AngleArc Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "AngleArc" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal dwRadius As Long, ByVal eStartAngle As Double, ByVal eSweepAngle As Double) As Long"
   Case Is = "animatewindow"
       sval = "Declare Function AnimateWindow Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hwnd As Long, ByVal dwTime As Long, ByVal dwFlags As Long) As Boolean"
   Case Is = "appendmenu"
       sval = "Declare Function AppendMenu Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "AppendMenuA" & Chr(34) & " (ByVal hMenu As Long, ByVal wFlags As Long, ByVal wIDNewItem As Long, ByVal lpNewItem As Any) As Long"
   Case Is = "arc"
       sval = "Declare Function Arc Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "Arc" & Chr(34) & " (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long, ByVal X3 As Long, ByVal Y3 As Long, ByVal X4 As Long, ByVal Y4 As Long) As Long"
   Case Is = "arcto"
       sval = "Declare Function ArcTo Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "ArcTo" & Chr(34) & " (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long, ByVal X3 As Long, ByVal Y3 As Long, ByVal X4 As Long, ByVal Y4 As Long) As Long"
   Case Is = "auxgetdevcaps"
       sval = "Declare Function auxGetDevCaps Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "auxGetDevCapsA" & Chr(34) & " (ByVal uDeviceID As Long, lpCaps As AUXCAPS, ByVal uSize As Long) As Long"
   Case Is = "auxgetnumdevs"
       sval = "Declare Function auxGetNumDevs Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "auxGetNumDevs" & Chr(34) & " () As Long"
   Case Is = "auxgetvolume"
       sval = "Declare Function auxGetVolume Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "auxGetVolume" & Chr(34) & " (ByVal uDeviceID As Long, lpdwVolume As Long) As Long"
   Case Is = "auxsetvolume"
       sval = "Declare Function auxSetVolume Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "auxSetVolume" & Chr(34) & " (ByVal uDeviceID As Long, ByVal dwVolume As Long) As Long"
   Case Is = "avifileexit"
       sval = "Declare Sub AVIFileExit Lib " & Chr(34) & "avifil32" & Chr(34) & " ()"
   Case Is = "avifileinfo"
       sval = "Declare Function AVIFileInfo Lib " & Chr(34) & "avifil32" & Chr(34) & " Alias " & Chr(34) & "AVIFileInfoA" & Chr(34) & " (ByVal pfile As Long, pfi As AVIFILEINFO, ByVal lSize As Long) As Long"
   Case Is = "avifileinit"
       sval = "Declare Sub AVIFileInit Lib " & Chr(34) & "avifil32" & Chr(34) & " ()"
   Case Is = "avifileopen"
       sval = "Declare Function AVIFileOpen Lib " & Chr(34) & "avifil32" & Chr(34) & " Alias " & Chr(34) & "AVIFileOpenA" & Chr(34) & " (ppfile As Long, ByVal szFile As String, ByVal mode As Long, pclsidHandler As Any) As Long"
   Case Is = "avifilerelease"
       sval = "Declare Function AVIFileRelease Lib " & Chr(34) & "avifil32" & Chr(34) & " (ByVal pfile As Long) As Long"
   Case Is = "backupeventlog"
       sval = "Declare Function BackupEventLog Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "BackupEventLogA" & Chr(34) & " (ByVal hEventLog As Long, ByVal lpBackupFileName As String) As Long"
   Case Is = "beep"
       sval = "Declare Function Beep Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "Beep" & Chr(34) & " (ByVal dwFreq As Long, ByVal dwDuration As Long) As Long"
   Case Is = "begindeferwindowpos"
       sval = "Declare Function BeginDeferWindowPos Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "BeginDeferWindowPos" & Chr(34) & " (ByVal nNumWindows As Long) As Long"
   Case Is = "beginpath"
       sval = "Declare Function BeginPath Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "BeginPath" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "bitblt"
       sval = "Declare Function BitBlt Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "BitBlt" & Chr(34) & " (ByVal hDestDC As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hSrcDC As Long, ByVal xSrc As Long, ByVal ySrc As Long, ByVal dwRop As Long) As Long"
   Case Is = "blockinput"
       sval = "Private Declare Function BlockInput Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal fBlock As Long) As Long"
   Case Is = "bringwindowtotop"
       sval = "Declare Function BringWindowToTop Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "BringWindowToTop" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "broadcastsystemmessage"
       sval = "Declare Function BroadcastSystemMessage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "BroadcastSystemMessage" & Chr(34) & " (ByVal dw As Long, pdw As Long, ByVal un As Long, ByVal wParam As Long, ByVal lParam As Long) As Long"
   Case Is = "callnexthookex"
       sval = "Declare Function CallNextHookEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CallNextHookEx" & Chr(34) & " (ByVal hHook As Long, ByVal ncode As Long, ByVal wParam As Long, lParam As Any) As Long"
   Case Is = "callwindowproc"
       sval = "Declare Function CallWindowProc Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CallWindowProcA" & Chr(34) & " (ByVal lpPrevWndFunc As Long, ByVal hWnd As Long, ByVal Msg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long"
   Case Is = "changedisplaysettings"
       sval = "Declare Function ChangeDisplaySettings Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ChangeDisplaySettingsA" & Chr(34) & " (lpDevMode As Any, ByVal dwFlags As Long) As Long"
   Case Is = "changedisplaysettingsex"
       sval = "Declare Function ChangeDisplaySettingsEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ChangeDisplaySettingsExA" & Chr(34) & " (lpszDeviceName As Any, lpDevMode As Any, ByVal hWnd As Long, ByVal dwFlags As Long, lParam As Any) As Long"
   Case Is = "charlower"
       sval = "Declare Function CharLower Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CharLowerA" & Chr(34) & " (ByVal lpsz As String) As String"
   Case Is = "charlowerbuff"
       sval = "Declare Function CharLowerBuff Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CharLowerBuffA" & Chr(34) & " (ByVal lpsz As String, ByVal cchLength As Long) As Long"
   Case Is = "charupper"
       sval = "Declare Function CharUpper Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CharUpperA" & Chr(34) & " (ByVal lpsz As String) As String"
   Case Is = "checkmenuradioitem"
       sval = "Declare Function CheckMenuRadioItem Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hMenu As Long, ByVal un1 As Long, ByVal un2 As Long, ByVal un3 As Long, ByVal un4 As Long) As Long"
   Case Is = "choosecolor"
       sval = "Declare Function ChooseColor Lib " & Chr(34) & "comdlg32.dll" & Chr(34) & " Alias " & Chr(34) & "ChooseColorA" & Chr(34) & " (pChoosecolor As CHOOSECOLOR) As Long"
   Case Is = "choosefont"
       sval = "Declare Function ChooseFont Lib " & Chr(34) & "comdlg32.dll" & Chr(34) & " Alias " & Chr(34) & "ChooseFontA" & Chr(34) & " (pChoosefont As CHOOSEFONT) As Long"
   Case Is = "chord"
       sval = "Declare Function Chord Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "Chord" & Chr(34) & " (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long, ByVal X3 As Long, ByVal Y3 As Long, ByVal X4 As Long, ByVal Y4 As Long) As Long"
   Case Is = "cleareventlog"
       sval = "Declare Function ClearEventLog Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "ClearEventLogA" & Chr(34) & " (ByVal hEventLog As Long, ByVal lpBackupFileName As String) As Long"
   Case Is = "cleareventlog"
       sval = "Declare Function ClearEventLog Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "ClearEventLogA" & Chr(34) & " (ByVal hEventLog As Long, ByVal lpBackupFileName As String) As Long"
   Case Is = "clipcursor"
       sval = "Declare Function ClipCursor Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ClipCursor" & Chr(34) & " (lpRect As Any) As Long"
   Case Is = "closeclipboard"
       sval = "Declare Function CloseClipboard Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CloseClipboard" & Chr(34) & " () As Long"
   Case Is = "closeeventlog"
       sval = "Declare Function CloseEventLog Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hEventLog As Long) As Long"
   Case Is = "closehandle"
       sval = "Declare Function CloseHandle Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "CloseHandle" & Chr(34) & " (ByVal hObject As Long) As Long"
   Case Is = "closeprinter"
       sval = "Declare Function ClosePrinter Lib " & Chr(34) & "winspool.drv" & Chr(34) & " (ByVal hPrinter As Long) As Long"
   Case Is = "closeservicehandle"
       sval = "Declare Function CloseServiceHandle Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hSCObject As Long) As Long"
   Case Is = "closesocket"
       sval = "Declare Function closesocket Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal s As Long) As Long"
   Case Is = "closewindow"
       sval = "Declare Function CloseWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CloseWindow" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "cocreateguid"
       sval = "Declare Function CoCreateGuid Lib " & Chr(34) & "ole32" & Chr(34) & " (id As Any) As Long"
   Case Is = "combinergn"
       sval = "Declare Function CombineRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CombineRgn" & Chr(34) & " (ByVal hDestRgn As Long, ByVal hSrcRgn1 As Long, ByVal hSrcRgn2 As Long, ByVal nCombineMode As Long) As Long"
   Case Is = "commdlgextendederror"
       sval = "Declare Function CommDlgExtendedError Lib " & Chr(34) & "comdlg32.dll" & Chr(34) & " Alias " & Chr(34) & "CommDlgExtendedError" & Chr(34) & " () As Long"
   Case Is = "comparefiletime"
       sval = "Declare Function CompareFileTime Lib " & Chr(34) & "kernel32" & Chr(34) & " (lpFileTime1 As FILETIME, lpFileTime2 As FILETIME) As Long"
   Case Is = "comparestring"
       sval = "Declare Function CompareString Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "CompareStringA" & Chr(34) & " (ByVal Locale As Long, ByVal dwCmpFlags As Long, ByVal lpString1 As String, ByVal cchCount1 As Long, ByVal lpString2 As String, ByVal cchCount2 As Long) As Long"
   Case Is = "configureport"
       sval = "Declare Function ConfigurePort Lib " & Chr(34) & "winspool.drv" & Chr(34) & " Alias " & Chr(34) & "ConfigurePortA" & Chr(34) & " (ByVal pName As String, ByVal hwnd As Long, ByVal pPortName As String) As Long"
   Case Is = "connect"
       sval = "Declare Function Connect Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " Alias " & Chr(34) & "connect" & Chr(34) & " (ByVal s As Long, addr As sockaddr, ByVal namelen As Long) As Long"
   Case Is = "copyfile"
       sval = "Declare Function CopyFile Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "CopyFileA" & Chr(34) & " (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As Long) As Long"
   Case Is = "copyfileex"
       sval = "Declare Function CopyFileEx Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " Alias " & Chr(34) & "CopyFileExA" & Chr(34) & " (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As Long, lpData As Any, ByRef pbCancel As Long, ByVal dwCopyFlags As Long) As Long"
   Case Is = "copyicon"
       sval = "Declare Function CopyIcon Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hIcon As Long) As Long"
   Case Is = "copyimage"
       sval = "Declare Function CopyImage Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal handle As Long, ByVal imageType As Long, ByVal newWidth As Long, ByVal newHeight As Long, ByVal lFlags As Long) As Long"
   Case Is = "copylzfile"
       sval = "Declare Function CopyLZFile Lib " & Chr(34) & "lz32" & Chr(34) & " Alias " & Chr(34) & "CopyLZFile" & Chr(34) & " (ByVal n1 As Long, ByVal n2 As Long) As Long"
   Case Is = "copymemory"
       sval = "Declare Sub CopyMemory Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "RtlMoveMemory" & Chr(34) & " (pDst As Any, pSrc As Any, ByVal ByteLen As Long)"
   Case Is = "copyrect"
       sval = "Declare Function CopyRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CopyRect" & Chr(34) & " (lpDestRect As RECT, lpSourceRect As RECT) As Long"
   Case Is = "cotaskmemfree"
       sval = "Declare Sub CoTaskMemFree Lib " & Chr(34) & "ole32.dll" & Chr(34) & " (ByVal hMem As Long)"
   Case Is = "createbitmap"
       sval = "Declare Function CreateBitmap Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateBitmap" & Chr(34) & " (ByVal nWidth As Long, ByVal nHeight As Long, ByVal nPlanes As Long, ByVal nBitCount As Long, lpBits As Any) As Long"
   Case Is = "createbrushindirect"
       sval = "Declare Function CreateBrushIndirect Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateBrushIndirect" & Chr(34) & " (lpLogBrush As LOGBRUSH) As Long"
   Case Is = "createcaret"
       sval = "Declare Function CreateCaret Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CreateCaret" & Chr(34) & " (ByVal hwnd As Long, ByVal hBitmap As Long, ByVal nWidth As Long, ByVal nHeight As Long) As Long"
   Case Is = "createcompatiblebitmap"
       sval = "Declare Function CreateCompatibleBitmap Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateCompatibleBitmap" & Chr(34) & " (ByVal hdc As Long, ByVal nWidth As Long, ByVal nHeight As Long) As Long"
   Case Is = "createcompatibledc"
       sval = "Declare Function CreateCompatibleDC Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateCompatibleDC" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "createcursor"
       sval = "Declare Function CreateCursor Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CreateCursor" & Chr(34) & " (ByVal hInstance As Long, ByVal nXhotspot As Long, ByVal nYhotspot As Long, ByVal nWidth As Long, ByVal nHeight As Long, lpANDbitPlane As Any, lpXORbitPlane As Any) As Long"
   Case Is = "createdc"
       sval = "Declare Function CreateDC Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateDCA" & Chr(34) & " (ByVal lpDriverName As String, ByVal lpDeviceName As String, ByVal lpOutput As String, lpInitData As DEVMODE) As Long"
   Case Is = "createdibpatternbrushpt"
       sval = "Declare Function CreateDIBPatternBrushPt Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateDIBPatternBrushPt" & Chr(34) & " (lpPackedDIB As Any, ByVal iUsage As Long) As Long"
   Case Is = "createdibsection"
       sval = "Declare Function CreateDIBSection Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long, pBitmapInfo As BITMAPINFO, ByVal un As Long, ByVal lplpVoid As Long, ByVal handle As Long, ByVal dw As Long) As Long"
   Case Is = "createdirectory"
       sval = "Declare Function CreateDirectory Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "CreateDirectoryA" & Chr(34) & " (ByVal lpPathName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long"
   Case Is = "createellipticrgn"
       sval = "Declare Function CreateEllipticRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateEllipticRgn" & Chr(34) & " (ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long"
   Case Is = "createellipticrgnindirect"
       sval = "Declare Function CreateEllipticRgnIndirect Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateEllipticRgnIndirect" & Chr(34) & " (lpRect As Rect) As Long"
   Case Is = "createfile"
       sval = "Declare Function CreateFile Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "CreateFileA" & Chr(34) & " (ByVal lpFileName As String, ByVal dwDesiredAccess As Long, ByVal dwShareMode As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As Long, ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As Long) As Long"
   Case Is = "createfont"
       sval = "Declare Function CreateFont Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateFontA" & Chr(34) & " (ByVal H As Long, ByVal W As Long, ByVal E As Long, ByVal O As Long, ByVal W As Long, ByVal I As Long, ByVal u As Long, ByVal S As Long, ByVal C As Long, ByVal OP As Long, ByVal CP As Long, ByVal Q As Long, ByVal PAF As Long, ByVal F As String) As Long"
   Case Is = "createfontindirect"
       sval = "Declare Function CreateFontIndirect Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateFontIndirectA" & Chr(34) & " (lpLogFont As LOGFONT) As Long"
   Case Is = "createhardlink"
       sval = "Declare Function CreateHardLink Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " Alias " & Chr(34) & "CreateHardLinkA" & Chr(34) & " (ByVal lpFileName As String, ByVal lpExistingFileName As String, ByRef lpSecurityAttributes As Any) As Long"
   Case Is = "createhatchbrush"
       sval = "Declare Function CreateHatchBrush Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateHatchBrush" & Chr(34) & " (ByVal nIndex As Long, ByVal crColor As Long) As Long"
   Case Is = "createpalette"
       sval = "Declare Function CreatePalette Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreatePalette" & Chr(34) & " (lpLogPalette As LOGPALETTE) As Long"
   Case Is = "createmutex"
       sval = "Declare Function CreateMutex Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "CreateMutexA" & Chr(34) & " (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal bInitialOwner As Long, ByVal lpName As String) As Long"
   Case Is = "createpatternbrush"
       sval = "Declare Function CreatePatternBrush Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreatePatternBrush" & Chr(34) & " (ByVal hBitmap As Long) As Long"
   Case Is = "createpen"
       sval = "Declare Function CreatePen Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreatePen" & Chr(34) & " (ByVal nPenStyle As Long, ByVal nWidth As Long, ByVal crColor As Long) As Long"
   Case Is = "createpenindirect"
       sval = "Declare Function CreatePenIndirect Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreatePenIndirect" & Chr(34) & " (lpLogPen As LOGPEN) As Long"
   Case Is = "createpipe"
       sval = "Declare Function CreatePipe Lib " & Chr(34) & "kernel32" & Chr(34) & " (phReadPipe As Long, phWritePipe As Long, lpPipeAttributes As SECURITY_ATTRIBUTES, ByVal nSize As Long) As Long"
   Case Is = "createpolygonrgn"
       sval = "Declare Function CreatePolygonRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreatePolygonRgn" & Chr(34) & " (lpPoint As POINTAPI, ByVal nCount As Long, ByVal nPolyFillMode As Long) As Long"
   Case Is = "createpolypolygonrgn"
       sval = "Declare Function CreatePolyPolygonRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreatePolyPolygonRgn" & Chr(34) & " (lpPoint As POINTAPI, lpPolyCounts As Long, ByVal nCount As Long, ByVal nPolyFillMode As Long) As Long"
   Case Is = "createpopupmenu"
       sval = "Declare Function CreatePopupMenu Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CreatePopupMenu" & Chr(34) & " () As Long"
   Case Is = "createprocess"
       sval = "Declare Function CreateProcess Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "CreateProcessA" & Chr(34) & " (ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProcessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As Long, ByVal dwCreationFlags As Long, lpEnvironment As Any, ByVal lpCurrentDriectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As Long"
   Case Is = "createprocesswithlogon"
       sval = "Declare Function CreateProcessWithLogon Lib " & Chr(34) & "Advapi32" & Chr(34) & " Alias " & Chr(34) & "CreateProcessWithLogonW" & Chr(34) & " (ByVal lpUsername As Long, ByVal lpDomain As Long, ByVal lpPassword As Long, ByVal dwLogonFlags As Long, ByVal lpApplicationName As Long, ByVal lpCommandLine As Long, ByVal dwCreationFlags As Long, ByVal lpEnvironment As Long, ByVal lpCurrentDirectory As Long, lpStartupInfo As STARTUPINFO, lpProcessInfo As PROCESS_INFORMATION) As Long"
   Case Is = "createrectrgn"
       sval = "Declare Function CreateRectRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateRectRgn" & Chr(34) & " (ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long"
   Case Is = "createrectrgnindirect"
       sval = "Declare Function CreateRectRgnIndirect Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateRectRgnIndirect" & Chr(34) & " (lpRect As RECT) As Long"
   Case Is = "createroundrectrgn"
       sval = "Declare Function CreateRoundRectRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateRoundRectRgn" & Chr(34) & " (ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long, ByVal X3 As Long, ByVal Y3 As Long) As Long"
   Case Is = "createsolidbrush"
       sval = "Declare Function CreateSolidBrush Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "CreateSolidBrush" & Chr(34) & " (ByVal crColor As Long) As Long"
   Case Is = "createthread"
       sval = "Declare Function CreateThread Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "CreateThread" & Chr(34) & " (lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal dwStackSize As Long, lpStartAddress As Long, lpParameter As Any, ByVal dwCreationFlags As Long, lpThreadId As Long) As Long"
   Case Is = "createtimerqueue"
       sval = "Declare Function CreateTimerQueue Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " () As Long"
   Case Is = "createtimerqueuetimer"
       sval = "Declare Function CreateTimerQueueTimer Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " (ByRef phNewTimer As Long, ByVal TimerQueue As Long, ByVal Callback As Long, ByVal Parameter As Long, ByVal DueTime As Long, ByVal Period As Long, ByVal Flags As Long) As Long"
   Case Is = "createtoolhelp32snapshot"
       sval = "Declare Function CreateToolhelp32Snapshot Lib " & Chr(34) & "Kernel32" & Chr(34) & " (ByVal lFlags As Long, ByVal lProcessID As Long) As Long"
   Case Is = "createwindowex"
       sval = "Declare Function CreateWindowEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "CreateWindowExA" & Chr(34) & " (ByVal dwExStyle As Long, ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As Long, ByVal hMenu As Long, ByVal hInstance As Long, lpParam As Any) As Long"
   Case Is = "cryptacquirecontext"
       sval = "Declare Function CryptAcquireContext Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "CryptAcquireContextA" & Chr(34) & " (phProv As Long, pszContainer As String, pszProvider As String, ByVal dwProvType As Long, ByVal dwFlags As Long) As Long"
   Case Is = "cryptcreatehash"
       sval = "Declare Function CryptCreateHash Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hProv As Long, ByVal Algid As Long, ByVal hKey As Long, ByVal dwFlags As Long, phHash As Long) As Long"
   Case Is = "cryptdecrypt"
       sval = "Declare Function CryptDecrypt Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hKey As Long, ByVal hHash As Long, ByVal Final As Long, ByVal dwFlags As Long, ByVal pbData As String, pdwDataLen As Long) As Long"
   Case Is = "cryptderivekey"
       sval = "Declare Function CryptDeriveKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hProv As Long, ByVal Algid As Long, ByVal hBaseData As Long, ByVal dwFlags As Long, phKey As Long) As Long"
   Case Is = "cryptdestroyhash"
       sval = "Declare Function CryptDestroyHash Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hHash As Long) As Long"
   Case Is = "cryptdestroykey"
       sval = "Declare Function CryptDestroyKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hKey As Long) As Long"
   Case Is = "cryptencrypt"
       sval = "Declare Function CryptEncrypt Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hKey As Long, ByVal hHash As Long, ByVal Final As Long, ByVal dwFlags As Long, ByVal pbData As String, pdwDataLen As Long, ByVal dwBufLen As Long) As Long"
   Case Is = "cryptexportkey"
       sval = "Declare Function CryptExportKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hKey As Long, ByVal hExpKey As Long, ByVal dwBlobType As Long, ByVal dwFlags As Long, ByVal pbData As String, pdwDataLen As Long) As Long"
   Case Is = "cryptgenkey"
       sval = "Declare Function CryptGenKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hProv As Long, ByVal Algid As Long, ByVal dwFlags As Long, phKey As Long) As Long"
   Case Is = "cryptgetprovparam"
       sval = "eclare Function CryptGetProvParam Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hProv As Long, ByVal dwParam As Long, pbData As Any, pdwDataLen As Long, ByVal dwFlags As Long) As Long"
   Case Is = "cryptgetuserkey"
       sval = "Declare Function CryptGetUserKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hProv As Long, ByVal dwKeySpec As Long, phUserKey As Long) As Long"
   Case Is = "crypthashdata"
       sval = "Declare Function CryptHashData Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hHash As Long, ByVal pbData As String, ByVal dwDataLen As Long, ByVal dwFlags As Long) As Long"
   Case Is = "cryptreleasecontext"
       sval = "Declare Function CryptReleaseContext Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hProv As Long, ByVal dwFlags As Long) As Long"
   Case Is = "cryptsignhash"
       sval = "Declare Function CryptSignHash Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "CryptSignHashA" & Chr(34) & " (ByVal hHash As Long, ByVal dwKeySpec As Long, ByVal sDescription As String, ByVal dwFlags As Long, ByVal pbSignature As String, pdwSigLen As Long) As Long"
   Case Is = "cryptverifysignature"
       sval = "Declare Function CryptVerifySignature Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "CryptVerifySignatureA" & Chr(34) & " (ByVal hHash As Long, ByVal pbSignature As String, ByVal dwSigLen As Long, ByVal hPubKey As Long, ByVal sDescription As String, ByVal dwFlags As Long) As Long"
   Case Is = "ddeconnect"
       sval = "Declare Function DdeConnect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DdeConnect" & Chr(34) & " (ByVal idInst As Long, ByVal hszService As Long, ByVal hszTopic As Long, pCC As CONVCONTEXT) As Long"
   Case Is = "ddecreatestringhandle"
       sval = "Declare Function DdeCreateStringHandle Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DdeCreateStringHandleA" & Chr(34) & " (ByVal idInst As Long, ByVal psz As String, ByVal iCodePage As Long) As Long"
   Case Is = "ddefreestringhandle"
       sval = "Declare Function DdeFreeStringHandle Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DdeFreeStringHandle" & Chr(34) & " (ByVal idInst As Long, ByVal hsz As Long) As Long"
   Case Is = "ddeinitialize"
       sval = "Declare Function DdeInitialize Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DdeInitializeA" & Chr(34) & " (pidInst As Long, ByVal pfnCallback As Long, ByVal afCmd As Long, ByVal ulRes As Long) As Integer"
   Case Is = "ddenameservice"
       sval = "Declare Function DdeNameService Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DdeNameService" & Chr(34) & " (ByVal idInst As Long, ByVal hsz1 As Long, ByVal hsz2 As Long, ByVal afCmd As Long) As Long"
   Case Is = "ddequerystring"
       sval = "Declare Function DdeQueryString Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DdeQueryStringA" & Chr(34) & " (ByVal idInst As Long, ByVal hsz As Long, ByVal psz As String, ByVal cchMax As Long, ByVal iCodePage As Long) As Long"
   Case Is = "ddeuninitialize"
       sval = "Declare Function DdeUninitialize Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DdeUninitialize" & Chr(34) & " (ByVal idInst As Long) As Long"
   Case Is = "decryptfile"
       sval = "Declare Function DecryptFile Lib " & Chr(34) & "ADVAPI32" & Chr(34) & " Alias " & Chr(34) & "DecryptFileA" & Chr(34) & " (ByVal lpFileName As String, ByVal dwReserved As Long) As Boolean"
   Case Is = "deferwindowpos"
       sval = "Declare Function DeferWindowPos Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DeferWindowPos" & Chr(34) & " (ByVal hWinPosInfo As Long, ByVal hwnd As Long, ByVal hWndInsertAfter As Long, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, ByVal wFlags As Long) As Long"
   Case Is = "defmdichildproc"
       sval = "Declare Function DefMDIChildProc Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DefMDIChildProcA" & Chr(34) & " (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long"
   Case Is = "defwindowproc"
       sval = "Declare Function DefWindowProc Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DefWindowProcA" & Chr(34) & " (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long"
   Case Is = "deletedc"
       sval = "Declare Function DeleteDC Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "DeleteDC" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "deletefile"
       sval = "Declare Function DeleteFile Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "DeleteFileA" & Chr(34) & " (ByVal lpFileName As String) As Long"
   Case Is = "deleteobject"
       sval = "Declare Function DeleteObject Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "DeleteObject" & Chr(34) & " (ByVal hObject As Long) As Long"
   Case Is = "deletetimerqueue"
       sval = "Declare Function DeleteTimerQueue Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " (ByVal TimerQueue As Long) As Long"
   Case Is = "deletetimerqueuetimer"
       sval = "Declare Function DeleteTimerQueueTimer Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " (ByVal TimerQueue As Long, ByVal Timer As Long, ByVal CompletionEvent As Long) As Long"
   Case Is = "deleteurlcacheentry"
       sval = "Declare Function DeleteUrlCacheEntry Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "DeleteUrlCacheEntryA" & Chr(34) & " (ByVal lpszUrlName As String) As Long"
   Case Is = "destroycursor"
       sval = "Declare Function DestroyCursor Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DestroyCursor" & Chr(34) & " (ByVal hCursor As Long) As Long"
   Case Is = "destroyicon"
       sval = "Declare Function DestroyIcon Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DestroyIcon" & Chr(34) & " (ByVal hIcon As Long) As Long"
   Case Is = "destroymenu"
       sval = "Declare Function DestroyMenu Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DestroyMenu" & Chr(34) & " (ByVal hMenu As Long) As Long"
   Case Is = "destroywindow"
       sval = "Declare Function DestroyWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DestroyWindow" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "devicecapabilities"
       sval = "Declare Function DeviceCapabilities Lib " & Chr(34) & "winspool.drv" & Chr(34) & " Alias " & Chr(34) & "DeviceCapabilitiesA" & Chr(34) & " (ByVal lpDeviceName As String, ByVal lpPort As String, ByVal iIndex As Long, ByVal lpOutput As String, lpDevMode As DEVMODE) As Long"
   Case Is = "deviceiocontrol"
       sval = "Declare Function DeviceIoControl Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hDevice As Long, ByVal dwIoControlCode As Long, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesReturned As Long, lpOverlapped As Any) As Long"
   Case Is = "dispatchmessage"
       sval = "Declare Function DispatchMessage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DispatchMessageA" & Chr(34) & " (lpMsg As MSG) As Long"
   Case Is = "dllregisterserver"
       sval = "Declare Function DllRegisterServer Lib " & Chr(34) & "ComCtl32.OCX" & Chr(34) & " () As Long"
   Case Is = "dllunregisterserver"
       sval = "Declare Function DllUnregisterServer Lib " & Chr(34) & "ComCtl32.OCX" & Chr(34) & " () As Long"
   Case Is = "dofiledownload"
       sval = "Declare Function DoFileDownload Lib " & Chr(34) & "shdocvw.dll" & Chr(34) & " (ByVal lpszFile As String) As Long"
   Case Is = "drawanimatedrects"
       sval = "Declare Function DrawAnimatedRects Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawAnimatedRects" & Chr(34) & " (ByVal hwnd As Long, ByVal idAni As Long, lprcFrom As Rect, lprcTo As Rect) As Long"
   Case Is = "drawcaption"
       sval = "Declare Function DrawCaption Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawCaption" & Chr(34) & " (ByVal hWnd As Long, ByVal hDC As Long, pcRect As Rect, ByVal un As Long) As Long"
   Case Is = "drawedge"
       sval = "Declare Function DrawEdge Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawEdge" & Chr(34) & " (ByVal hdc As Long, qrc As RECT, ByVal edge As Long, ByVal grfFlags As Long) As Long"
   Case Is = "drawfocusrect"
       sval = "Declare Function DrawFocusRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawFocusRect" & Chr(34) & " (ByVal hdc As Long, lpRect As RECT) As Long"
   Case Is = "drawframecontrol"
       sval = "Declare Function DrawFrameControl Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawFrameControl" & Chr(34) & " (ByVal hDC As Long, lpRect As RECT, ByVal un1 As Long, ByVal un2 As Long) As Long"
   Case Is = "drawicon"
       sval = "Declare Function DrawIcon Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawIcon" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal hIcon As Long) As Long"
   Case Is = "drawiconex"
       sval = "Declare Function DrawIconEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawIconEx" & Chr(34) & " (ByVal hdc As Long, ByVal xLeft As Long, ByVal yTop As Long, ByVal hIcon As Long, ByVal cxWidth As Long, ByVal cyWidth As Long, ByVal istepIfAniCur As Long, ByVal hbrFlickerFreeDraw As Long, ByVal diFlags As Long) As Long"
   Case Is = "drawmenubar"
       sval = "Declare Function DrawMenuBar Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawMenuBar" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "drawtext"
       sval = "Declare Function DrawText Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawTextA" & Chr(34) & " (ByVal hdc As Long, ByVal lpStr As String, ByVal nCount As Long, lpRect As RECT, ByVal wFormat As Long) As Long"
   Case Is = "drawtext"
       sval = "Declare Function DrawText Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawTextA" & Chr(34) & " (ByVal hdc As Long, ByVal lpStr As String, ByVal nCount As Long, lpRect As RECT, ByVal wFormat As Long) As Long"
   Case Is = "drawtextex"
       sval = "Declare Function DrawTextEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "DrawTextExA" & Chr(34) & " (ByVal hDC As Long, ByVal lpsz As String, ByVal n As Long, lpRect As RECT, ByVal un As Long, lpDrawTextParams As DRAWTEXTPARAMS) As Long"
   Case Is = "dsbrowseforcontainer"
       sval = "Declare Function DsBrowseForContainer Lib " & Chr(34) & "dsuiext" & Chr(34) & " Alias " & Chr(34) & "DsBrowseForContainerA" & Chr(34) & " (pInfo As DSBROWSEINFO) As Long"
   Case Is = "duplicateicon"
       sval = "Declare Function DuplicateIcon Lib " & Chr(34) & "shell32.dll" & Chr(34) & " (ByVal hInst As Long, ByVal hIcon As Long) As Long"
   Case Is = "ellipse"
       sval = "Declare Function Ellipse Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "Ellipse" & Chr(34) & " (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long"
   Case Is = "emptyclipboard"
       sval = "Declare Function EmptyClipboard Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EmptyClipboard" & Chr(34) & " () As Long"
   Case Is = "enablewindow"
       sval = "Declare Function EnableWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EnableWindow" & Chr(34) & " (ByVal hwnd As Long, ByVal fEnable As Long) As Long"
   Case Is = "encryptfile"
       sval = "Declare Function EncryptFile Lib " & Chr(34) & "ADVAPI32" & Chr(34) & " Alias " & Chr(34) & "EncryptFileA" & Chr(34) & " (ByVal lpFileName As String) As Boolean"
   Case Is = "enddeferwindowpos"
       sval = "Declare Function EndDeferWindowPos Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EndDeferWindowPos" & Chr(34) & " (ByVal hWinPosInfo As Long) As Long"
   Case Is = "enddoc"
       sval = "Declare Function EndDoc Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "EndDoc" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "endmenu"
       sval = "Declare Function EndMenu Lib " & Chr(34) & "user32.dll" & Chr(34) & " () As Long"
   Case Is = "endpage"
       sval = "Declare Function EndPage Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "EndPage" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "endpath"
       sval = "Declare Function EndPath Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "EndPath" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "enumchildwindows"
       sval = "Declare Function EnumChildWindows Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EnumChildWindows" & Chr(34) & " (ByVal hWndParent As Long, ByVal lpEnumFunc As Long, ByVal lParam As Long) As Long"
   Case Is = "enumdesktops"
       sval = "Declare Function EnumDesktops Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EnumDesktopsA" & Chr(34) & " (ByVal hwinsta As Long, ByVal lpEnumFunc As Long, ByVal lParam As Long) As Long"
   Case Is = "enumdisplaydevices"
       sval = "Declare Function EnumDisplayDevices Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EnumDisplayDevicesA" & Chr(34) & " (Unused As Any, ByVal iDevNum As Long, lpDisplayDevice As DISPLAY_DEVICE, ByVal dwFlags As Long) As Boolean"
   Case Is = "enumdisplaymonitors"
       sval = "Declare Function EnumDisplayMonitors Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal hdc As Long, ByRef lprcClip As Any, ByVal lpfnEnum As Long, ByVal dwData As Long) As Long"
   Case Is = "enumdisplaysettings"
       sval = "Declare Function EnumDisplaySettings Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EnumDisplaySettingsA" & Chr(34) & " (ByVal lpszDeviceName As Long, ByVal iModeNum As Long, lpDevMode As Any) As Boolean"
   Case Is = "enumfontfamilies"
       sval = "Declare Function EnumFontFamilies Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "EnumFontFamiliesA" & Chr(34) & " (ByVal hdc As Long, ByVal lpszFamily As String, ByVal lpEnumFontFamProc As Long, ByVal lParam As Long) As Long"
   Case Is = "enumfontfamiliesex"
       sval = "Declare Function EnumFontFamiliesEx Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "EnumFontFamiliesExA" & Chr(34) & " (ByVal hdc As Long, lpLogFont As LOGFONT, ByVal lpEnumFontProc As Long, ByVal lParam As Long, ByVal dw As Long) As Long"
   Case Is = "enumfonts"
       sval = "Declare Function EnumFonts Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "EnumFontsA" & Chr(34) & " (ByVal hDC As Long, ByVal lpsz As String, ByVal lpFontEnumProc As Long, ByVal lParam As Long) As Long"
   Case Is = "enumjobs"
       sval = "Declare Function EnumJobs Lib " & Chr(34) & "winspool.drv" & Chr(34) & " Alias " & Chr(34) & "EnumJobsA" & Chr(34) & " (ByVal hPrinter As Long, ByVal FirstJob As Long, ByVal NoJobs As Long, ByVal Level As Long, pJob As Any, ByVal cdBuf As Long, pcbNeeded As Long, pcReturned As Long) As Long"
   Case Is = "enumports"
       sval = "Declare Function EnumPorts Lib " & Chr(34) & "winspool.drv" & Chr(34) & " Alias " & Chr(34) & "EnumPortsA" & Chr(34) & " (ByVal pName As String, ByVal Level As Long, ByVal lpbPorts As Long, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As Long"
   Case Is = "enumprinters"
       sval = "Declare Function EnumPrinters Lib " & Chr(34) & "winspool.drv" & Chr(34) & " Alias " & Chr(34) & "EnumPrintersA" & Chr(34) & " (ByVal flags As Long, ByVal name As String, ByVal Level As Long, pPrinterEnum As Byte, ByVal cdBuf As Long, pcbNeeded As Long, pcReturned As Long) As Long"
   Case Is = "enumprocesses"
       sval = "Declare Function EnumProcesses Lib " & Chr(34) & "PSAPI.DLL" & Chr(34) & " (ByRef lpidProcess As Long, ByVal cb As Long, ByRef cbNeeded As Long) As Long"
   Case Is = "enumprocessmodules"
       sval = "Declare Function EnumProcessModules Lib " & Chr(34) & "PSAPI.DLL" & Chr(34) & " (ByVal hProcess As Long, ByRef lphModule As Long, ByVal cb As Long, ByRef cbNeeded As Long) As Long"
   Case Is = "enumprops"
       sval = "Declare Function EnumProps Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EnumPropsA" & Chr(34) & " (ByVal hWnd As Long, ByVal lpEnumFunc As Long) As Long"
   Case Is = "enumpropsex"
       sval = "Function EnumPropsEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EnumPropsExA" & Chr(34) & " (ByVal hWnd As Long, ByVal lpEnumFunc As Long, ByVal lParam As Long) As Long"
   Case Is = "enumresourcenames"
       sval = "Declare Function EnumResourceNames Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "EnumResourceNamesA" & Chr(34) & " (ByVal HModule As Long, ByVal lpType As resType, ByVal lpEnumFunc As Long, ByVal lParam As Long) As Long"
   Case Is = "enumservicesstatus"
       sval = "Declare Function EnumServicesStatus Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "EnumServicesStatusA" & Chr(34) & " (ByVal hSCManager As Long, ByVal dwServiceType As Long, ByVal dwServiceState As Long, lpServices As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, lpResumeHandle As Long) As Long"
   Case Is = "enumthreadwindows"
       sval = "Declare Function EnumThreadWindows Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "EnumThreadWindows" & Chr(34) & " (ByVal dwThreadId As Long, ByVal lpfn As Long, ByVal lParam As Long) As Long"
   Case Is = "enumwindows"
       sval = "Declare Function EnumWindows Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal lpEnumFunc As Long, ByVal lParam As Long) As Long"
   Case Is = "equalsid"
       sval = "Declare Function EqualSid Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (pSid1 As Byte, ByVal pSid2 As Long) As Long"
   Case Is = "escape"
       sval = "Declare Function Escape Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "Escape" & Chr(34) & " (ByVal hdc As Long, ByVal nEscape As Long, ByVal nCount As Long, ByVal lpInData As String, lpOutData As Any) As Long"
   Case Is = "exitprocess"
       sval = "Declare Sub ExitProcess Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "ExitProcess" & Chr(34) & " (ByVal uExitCode As Long)"
   Case Is = "exitthread"
       sval = "Declare Sub ExitThread Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "ExitThread" & Chr(34) & " (ByVal dwExitCode As Long)"
   Case Is = "exitwindowsex"
       sval = "Declare Function ExitWindowsEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ExitWindowsEx" & Chr(34) & " (ByVal uFlags As Long, ByVal dwReserved As Long) As Long"
   Case Is = "extfloodfill"
       sval = "Declare Function ExtFloodFill Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "ExtFloodFill" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal crColor As Long, ByVal wFillType As Long) As Long"
   Case Is = "extractassociatedicon"
       sval = "Declare Function ExtractAssociatedIcon Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "ExtractAssociatedIconA" & Chr(34) & " (ByVal hInst As Long, ByVal lpIconPath As String, lpiIcon As Long) As Long"
   Case Is = "extracticon"
       sval = "Declare Function ExtractIcon Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "ExtractIconA" & Chr(34) & " (ByVal hInst As Long, ByVal lpszExeFileName As String, ByVal nIconIndex As Long) As Long"
   Case Is = "extracticonex"
       sval = "Declare Function ExtractIconEx Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "ExtractIconExA" & Chr(34) & " (ByVal lpszFile As String, ByVal nIconIndex As Long, phiconLarge As Long, phiconSmall As Long, ByVal nIcons As Long) As Long"
   Case Is = "fatalappexit"
       sval = "Declare Sub FatalAppExit Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FatalAppExitA" & Chr(34) & " (ByVal uAction As Long, ByVal lpMessageText As String)"
   Case Is = "fatalexit"
       sval = "Declare Sub FatalExit Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FatalExit" & Chr(34) & " (ByVal code As Long)"
   Case Is = "fcreateshelllink"
       sval = "Declare Function fCreateShellLink Lib " & Chr(34) & "VB5STKIT.DLL" & Chr(34) & " (ByVal lpstrFolderName As String, ByVal lpstrLinkName As String, ByVal lpstrLinkPath As String, ByVal lpstrLinkArgs As String) As Long"
   Case Is = "filetimetolocalfiletime"
       sval = "Declare Function FileTimeToLocalFileTime Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FileTimeToLocalFileTime" & Chr(34) & " (lpFileTime As FILETIME, lpLocalFileTime As FILETIME) As Long"
   Case Is = "filetimetosystemtime"
       sval = "Declare Function FileTimeToSystemTime Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FileTimeToSystemTime" & Chr(34) & " (lpFileTime As FILETIME, lpSystemTime As SYSTEMTIME) As Long"
   Case Is = "fillmemory"
       sval = "Declare Sub FillMemory Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " Alias " & Chr(34) & "RtlFillMemory" & Chr(34) & " (Destination As Any, ByVal Length As Long, ByVal Fill As Byte)"
   Case Is = "fillpath"
       sval = "Declare Function FillPath Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "FillPath" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "fillrect"
       sval = "Declare Function FillRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "FillRect" & Chr(34) & " (ByVal hdc As Long, lpRect As RECT, ByVal hBrush As Long) As Long"
   Case Is = "fillrgn"
       sval = "Declare Function FillRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "FillRgn" & Chr(34) & " (ByVal hdc As Long, ByVal hRgn As Long, ByVal hBrush As Long) As Long"
   Case Is = "findclose"
       sval = "Declare Function FindClose Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FindClose" & Chr(34) & " (ByVal hFindFile As Long) As Long"
   Case Is = "findclosechangenotification"
       sval = "Declare Function FindCloseChangeNotification Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hChangeHandle As Long) As Long"
   Case Is = "findcloseurlcache"
       sval = "Declare Sub FindCloseUrlCache Lib " & Chr(34) & "wininet.dll" & Chr(34) & " (ByVal hEnumHandle As Long)"
   Case Is = "findexecutable"
       sval = "Declare Function FindExecutable Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "FindExecutableA" & Chr(34) & " (ByVal lpFile As String, ByVal lpDirectory As String, ByVal lpResult As String) As Long"
   Case Is = "findfirstchangenotification"
       sval = "Declare Function FindFirstChangeNotification Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FindFirstChangeNotificationA" & Chr(34) & " (ByVal lpPathName As String, ByVal bWatchSubtree As Long, ByVal dwNotifyFilter As Long) As Long"
   Case Is = "findfirstfile"
       sval = "Declare Function FindFirstFile Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FindFirstFileA" & Chr(34) & " (ByVal lpFileName As String, lpFindFileData As WIN32_FIND_DATA) As Long"
   Case Is = "findfirsturlcacheentry"
       sval = "Declare Function FindFirstUrlCacheEntry Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FindFirstUrlCacheEntryA" & Chr(34) & " (ByVal lpszUrlSearchPattern As String, ByVal lpFirstCacheEntryInfo As Long, ByRef lpdwFirstCacheEntryInfoBufferSize As Long) As Long"
   Case Is = "findnextchangenotification"
       sval = "Declare Function FindNextChangeNotification Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hChangeHandle As Long) As Long"
   Case Is = "findnextfile"
       sval = "Declare Function FindNextFile Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FindNextFileA" & Chr(34) & " (ByVal hFindFile As Long, lpFindFileData As WIN32_FIND_DATA) As Long"
   Case Is = "findnexturlcacheentry"
       sval = "Declare Function FindNextUrlCacheEntry Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FindNextUrlCacheEntryA" & Chr(34) & " (ByVal hEnumHandle As Long, ByVal lpNextCacheEntryInfo As Long, ByRef lpdwNextCacheEntryInfoBufferSize As Long) As Long"
   Case Is = "findwindow"
       sval = "Declare Function FindWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "FindWindowA" & Chr(34) & " (ByVal lpClassName As String, ByVal lpWindowName As String) As Long"
   Case Is = "findwindowex"
       sval = "Declare Function FindWindowEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "FindWindowExA" & Chr(34) & " (ByVal hWnd1 As Long, ByVal hWnd2 As Long, ByVal lpsz1 As String, ByVal lpsz2 As String) As Long"
   Case Is = "flashwindow"
       sval = "Declare Function FlashWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "FlashWindow" & Chr(34) & " (ByVal hwnd As Long, ByVal bInvert As Long) As Long"
   Case Is = "flashwindowex"
       sval = "Declare Function FlashWindowEx Lib " & Chr(34) & "user32" & Chr(34) & " (pfwi As FLASHWINFO) As Boolean"
   Case Is = "flatsb_enablescrollbar"
       sval = "Declare Function FlatSB_EnableScrollBar Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal wSBflags As Long, ByVal wArrows As Long) As Long"
   Case Is = "flatsb_getscrollinfo"
       sval = "Declare Function FlatSB_GetScrollInfo Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal fnBar As Long, lpsi As SCROLLINFO) As Boolean"
   Case Is = "flatsb_getscrollpos"
       sval = "Declare Function FlatSB_GetScrollPos Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal code As Long) As Long"
   Case Is = "flatsb_getscrollprop"
       sval = "Declare Function FlatSB_GetScrollProp Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal index As Long, pValue As Long) As Boolean"
   Case Is = "flatsb_getscrollrange"
       sval = "Declare Function FlatSB_GetScrollRange Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal code As Long, lpMinPos As Long, lpMaxPos As Long) As Boolean"
   Case Is = "flatsb_setscrollinfo"
       sval = "Declare Function FlatSB_SetScrollInfo Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal fnBar As Long, lpsi As SCROLLINFO, ByVal fRedraw As Boolean) As Long"
   Case Is = "flatsb_setscrollpos"
       sval = "Declare Function FlatSB_SetScrollPos Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal code As Long, ByVal nPos As Long, ByVal fRedraw As Boolean) As Long"
   Case Is = "flatsb_setscrollprop"
       sval = "Declare Function FlatSB_SetScrollProp Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal index As Long, ByVal newValue As Long, ByVal fRedraw As Boolean) As Boolean"
   Case Is = "flatsb_showscrollbar"
       sval = "Declare Function FlatSB_ShowScrollBar Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal code As Long, ByVal fShow As Boolean) As Boolean"
   Case Is = "flatsb_showscrollbar"
       sval = "Declare Function FlatSB_ShowScrollBar Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long, ByVal code As Long, ByVal fShow As Boolean) As Boolean"
   Case Is = "floodfill"
       sval = "Declare Function FloodFill Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "FloodFill" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal crColor As Long) As Long"
   Case Is = "formatmessage"
       sval = "Declare Function FormatMessage Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FormatMessageA" & Chr(34) & " (ByVal dwFlags As Long, lpSource As Any, ByVal dwMessageId As Long, ByVal dwLanguageId As Long, ByVal lpBuffer As String, ByVal nSize As Long, Arguments As Long) As Long"
   Case Is = "framerect"
       sval = "Declare Function FrameRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "FrameRect" & Chr(34) & " (ByVal hdc As Long, lpRect As RECT, ByVal hBrush As Long) As Long"
   Case Is = "framergn"
       sval = "Declare Function FrameRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "FrameRgn" & Chr(34) & " (ByVal hdc As Long, ByVal hRgn As Long, ByVal hBrush As Long, ByVal nWidth As Long, ByVal nHeight As Long) As Long"
   Case Is = "freeconsole"
       sval = "Declare Function FreeConsole Lib " & Chr(34) & "kernel32" & Chr(34) & " () As Long"
   Case Is = "freeenvironmentstrings"
       sval = "Declare Function FreeEnvironmentStrings Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FreeEnvironmentStringsA" & Chr(34) & " (ByVal lpsz As String) As Long"
   Case Is = "freelibrary"
       sval = "Declare Function FreeLibrary Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "FreeLibrary" & Chr(34) & " (ByVal hLibModule As Long) As Long"
   Case Is = "freesid"
       sval = "Declare Sub FreeSid Lib " & Chr(34) & "Advapi32" & Chr(34) & " (pSid As Any)"
   Case Is = "ftpcreatedirectory"
       sval = "Declare Function FtpCreateDirectory Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FtpCreateDirectoryA" & Chr(34) & " (ByVal hFtpSession As Long, ByVal lpszDirectory As String) As Boolean"
   Case Is = "ftpdeletefile"
       sval = "Declare Function FtpDeleteFile Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FtpDeleteFileA" & Chr(34) & " (ByVal hFtpSession As Long, ByVal lpszFileName As String) As Boolean"
   Case Is = "ftpfindfirstfile"
       sval = "Declare Function FtpFindFirstFile Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FtpFindFirstFileA" & Chr(34) & " (ByVal hFtpSession As Long, ByVal lpszSearchFile As String, lpFindFileData As WIN32_FIND_DATA, ByVal dwFlags As Long, ByVal dwContent As Long) As Long"
   Case Is = "ftpgetcurrentdirectory"
       sval = "Declare Function FtpGetCurrentDirectory Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FtpGetCurrentDirectoryA" & Chr(34) & " (ByVal hFtpSession As Long, ByVal lpszCurrentDirectory As String, lpdwCurrentDirectory As Long) As Long"
   Case Is = "ftpgetfile"
       sval = "Declare Function FtpGetFile Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FtpGetFileA" & Chr(34) & " (ByVal hConnect As Long, ByVal lpszRemoteFile As String, ByVal lpszNewFile As String, ByVal fFailIfExists As Long, ByVal dwFlagsAndAttributes As Long, ByVal dwFlags As Long, ByRef dwContext As Long) As Boolean"
   Case Is = "ftpputfile"
       sval = "Declare Function FtpPutFile Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FtpPutFileA" & Chr(34) & " (ByVal hConnect As Long, ByVal lpszLocalFile As String, ByVal lpszNewRemoteFile As String, ByVal dwFlags As Long, ByVal dwContext As Long) As Boolean"
   Case Is = "ftpremovedirectory"
       sval = "Declare Function FtpRemoveDirectory Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FtpRemoveDirectoryA" & Chr(34) & " (ByVal hFtpSession As Long, ByVal lpszDirectory As String) As Boolean"
   Case Is = "ftprenamefile"
       sval = "Declare Function FtpRenameFile Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FtpRenameFileA" & Chr(34) & " (ByVal hFtpSession As Long, ByVal lpszExisting As String, ByVal lpszNew As String) As Boolean"
   Case Is = "ftpsetcurrentdirectory"
       sval = "Declare Function FtpSetCurrentDirectory Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "FtpSetCurrentDirectoryA" & Chr(34) & " (ByVal hFtpSession As Long, ByVal lpszDirectory As String) As Boolean"
   Case Else
       sval = ""
  End Select
  
  returnApiG = sval
  
End Function
'---------------------------------------------------------------------------------
' list of all the api's from letters g-p
'---------------------------------------------------------------------------------
Private Function returnApiP(strApi As String) As String

Dim sval As String

 Select Case strApi
   Case Is = "gdialphablend"
       sval = "Declare Function GdiAlphaBlend Lib " & Chr(34) & "gdi32.dll" & Chr(34) & " (ByVal hdc As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal hdc As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal lInt As Long, ByVal BLENDFUNCT As Long) As Long"
   Case Is = "gdigradientfillrect"
       sval = "Declare Function GdiGradientFillRect Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GdiGradientFill" & Chr(34) & " (ByVal hdc As Long, pVertex As TRIVERTEX, ByVal dwNumVertex As Long, pMesh As GRADIENT_RECT, ByVal dwNumMesh As Long, ByVal dwMode As Long) As Long"
   Case Is = "gditransparentblt"
       sval = "Private Declare Function GdiTransparentBlt Lib " & Chr(34) & "gdi32.dll" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hSrcDC As Long, ByVal xSrc As Long, ByVal ySrc As Long, ByVal nSrcWidth As Long, ByVal nSrcHeight As Long, ByVal crTransparent As Long) As Boolean"
   Case Is = "getace"
       sval = "Declare Function GetAce Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal pAcl As Long, ByVal dwAceIndex As Long, pace As Any) As Long"
   Case Is = "getaclinformation"
       sval = "Declare Function GetAclInformation Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal pAcl As Long, pAclInformation As Any, ByVal nAclInformationLength As Long, ByVal dwAclInformationClass As Long) As Long"
   Case Is = "getactivewindow"
       sval = "Declare Function GetActiveWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetActiveWindow" & Chr(34) & " () As Long"
   Case Is = "getadaptersinfo"
       sval = "Declare Function GetAdaptersInfo Lib " & Chr(34) & "IPHlpApi" & Chr(34) & " (IpAdapterInfo As Any, pOutBufLen As Long) As Long"
   Case Is = "getallusersprofiledirectory"
       sval = "Declare Function GetAllUsersProfileDirectory Lib " & Chr(34) & "userenv.dll" & Chr(34) & " Alias " & Chr(34) & "GetAllUsersProfileDirectoryA" & Chr(34) & " (ByVal lpProfileDir As String, lpcchSize As Long) As Boolean"
   Case Is = "getancestor"
       sval = "Declare Function GetAncestor Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal hwnd As Long, ByVal gaFlags As Long) As Long"
   Case Is = "getarcdirection"
       sval = "Declare Function GetArcDirection Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetArcDirection" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "getasynckeystate"
       sval = "Declare Function GetAsyncKeyState Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetAsyncKeyState" & Chr(34) & " (ByVal vKey As Long) As Integer"
   Case Is = "getbinarytype"
       sval = "Declare Function GetBinaryType Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetBinaryTypeA" & Chr(34) & " (ByVal lpApplicationName As String, lpBinaryType As Long) As Long"
   Case Is = "getbitmapbits"
       sval = "Declare Function GetBitmapBits Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetBitmapBits" & Chr(34) & " (ByVal hBitmap As Long, ByVal dwCount As Long, lpBits As Any) As Long"
   Case Is = "getbkcolor"
       sval = "Declare Function GetBkColor Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetBkColor" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "getcaretblinktime"
       sval = "Declare Function GetCaretBlinkTime Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetCaretBlinkTime" & Chr(34) & " () As Long"
   Case Is = "getclassinfo"
       sval = "Declare Function GetClassInfo Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetClassInfoA" & Chr(34) & " (ByVal hInstance As Long, ByVal lpClassName As String, lpWndClass As WNDCLASS) As Long"
   Case Is = "getclassinfoex"
       sval = "Declare Function GetClassInfoEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetClassInfoExA" & Chr(34) & " (ByVal hInstance As Long, ByVal lpClassName As String, lpWndClass As WNDCLASSEX) As Long"
   Case Is = "getclassname"
       sval = "Declare Function GetClassName Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetClassNameA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpClassName As String, ByVal nMaxCount As Long) As Long"
   Case Is = "getclientrect"
       sval = "Declare Function GetClientRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetClientRect" & Chr(34) & " (ByVal hwnd As Long, lpRect As RECT) As Long"
   Case Is = "getclipboarddata"
       sval = "Declare Function GetClipboardData Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal wFormat As Long) As Long"
   Case Is = "getcliprgn"
       sval = "Declare Function GetClipRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetClipRgn" & Chr(34) & " (ByVal hdc As Long, ByVal hRgn As Long) As Long"
   Case Is = "getcommandline"
       sval = "Declare Function GetCommandLine Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetCommandLineA" & Chr(34) & " () As Long"
   Case Is = "getcompressedfilesize"
       sval = "Declare Function GetCompressedFileSize Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetCompressedFileSizeA" & Chr(34) & " (ByVal lpFileName As String, lpFileSizeHigh As Long) As Long"
   Case Is = "getcomputername"
       sval = "Declare Function GetComputerName Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetComputerNameA" & Chr(34) & " (ByVal lpBuffer As String, nSize As Long) As Long"
   Case Is = "getcomputernameex"
       sval = "Declare Function GetComputerNameEx Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " Alias " & Chr(34) & "GetComputerNameExA" & Chr(34) & " (ByVal NameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String, ByRef nSize As Long) As Long"
   Case Is = "getcomputernameex"
       sval = "Declare Function GetComputerNameEx Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " Alias " & Chr(34) & "GetComputerNameExA" & Chr(34) & " (ByVal NameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String, ByRef nSize As Long) As Long"
   Case Is = "getconsoledisplaymode"
       sval = "Declare Function GetConsoleDisplayMode Lib " & Chr(34) & "kernel32" & Chr(34) & " (lpModeFlags As Long) As Long"
   Case Is = "getconsoleprocesslist"
       sval = "Declare Function GetConsoleProcessList Lib " & Chr(34) & "kernel32" & Chr(34) & " (lpdwProcessList As Long, ByVal dwProcessCount As Long) As Long"
   Case Is = "getcurrencyformat"
       sval = "Declare Function GetCurrencyFormat Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetCurrencyFormatA" & Chr(34) & " (ByVal Locale As Long, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As Any, ByVal lpCurrencyStr As String, ByVal cchCurrency As Long) As Long"
   Case Is = "getcurrentdirectory"
       sval = "Declare Function GetCurrentDirectory Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetCurrentDirectory" & Chr(34) & " (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long"
   Case Is = "getcurrentprocess"
       sval = "Declare Function GetCurrentProcess Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetCurrentProcess" & Chr(34) & " () As Long"
   Case Is = "getcurrentprocessid"
       sval = "Declare Function GetCurrentProcessId Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetCurrentProcessId" & Chr(34) & " () As Long"
   Case Is = "getcurrentthread"
       sval = "Declare Function GetCurrentThread Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetCurrentThread" & Chr(34) & " () As Long"
   Case Is = "getcurrentthreadid"
       sval = "Declare Function GetCurrentThreadId Lib " & Chr(34) & "kernel32" & Chr(34) & " () As Long"
   Case Is = "getcursor"
       sval = "Declare Function GetCursor Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetCursor" & Chr(34) & " () As Long"
   Case Is = "getcursorpos"
       sval = "Declare Function GetCursorPos Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetCursorPos" & Chr(34) & " (lpPoint As POINTAPI) As Long"
   Case Is = "getdateformat"
       sval = "Declare Function GetDateFormat Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetDateFormatA" & Chr(34) & " (ByVal Locale As Long, ByVal dwFlags As Long, lpDate As SYSTEMTIME, ByVal lpFormat As String, ByVal lpDateStr As String, ByVal cchDate As Long) As Long"
   Case Is = "getdc"
       sval = "Declare Function GetDC Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetDC" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "getdefaultuserprofiledirectory"
       sval = "Declare Function GetDefaultUserProfileDirectory Lib " & Chr(34) & "userenv.dll" & Chr(34) & " Alias " & Chr(34) & "GetDefaultUserProfileDirectoryA" & Chr(34) & " (ByVal lpProfileDir As String, lpcchSize As Long) As Boolean"
   Case Is = "getdesktopwindow"
       sval = "Declare Function GetDesktopWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetDesktopWindow" & Chr(34) & " () As Long"
   Case Is = "getdevicecaps"
       sval = "Declare Function GetDeviceCaps Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetDeviceCaps" & Chr(34) & " (ByVal hdc As Long, ByVal nIndex As Long) As Long"
   Case Is = "getdevicegammaramp"
       sval = "Declare Function GetDeviceGammaRamp Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long, lpv As Any) As Long"
   Case Is = "getdibits"
       sval = "Declare Function GetDIBits Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal aHDC As Long, ByVal hBitmap As Long, ByVal nStartScan As Long, ByVal nNumScans As Long, lpBits As Any, lpBI As BITMAPINFO, ByVal wUsage As Long) As Long"
   Case Is = "getdiskfreespace"
       sval = "Declare Function GetDiskFreeSpace Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetDiskFreeSpaceA" & Chr(34) & " (ByVal lpRootPathName As String, lpSectorsPerCluster As Long, lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, lpTtoalNumberOfClusters As Long) As Long"
   Case Is = "getdiskfreespaceex"
       sval = "Declare Function GetDiskFreeSpaceEx Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetDiskFreeSpaceExA" & Chr(34) & " (ByVal lpRootPathName As String, lpFreeBytesAvailableToCaller As Currency, lpTotalNumberOfBytes As Currency, lpTotalNumberOfFreeBytes As Currency) As Long"
   Case Is = "getdoubleclicktime"
       sval = "Declare Function GetDoubleClickTime Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetDoubleClickTime" & Chr(34) & " () As Long"
   Case Is = "getdrivetype"
       sval = "Declare Function GetDriveType Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetDriveTypeA" & Chr(34) & " (ByVal nDrive As String) As Long"
   Case Is = "getenvironmentstrings"
       sval = "Declare Function GetEnvironmentStrings Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetEnvironmentStringsA" & Chr(34) & " () As Long"
   Case Is = "getenvironmentvariable"
       sval = "Declare Function GetEnvironmentVariable Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetEnvironmentVariableA" & Chr(34) & " (ByVal lpName As String, ByVal lpBuffer As String, ByVal nSize As Long) As Long"
   Case Is = "getexitcodeprocess"
       sval = "Declare Function GetExitCodeProcess Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetExitCodeProcess" & Chr(34) & " (ByVal hProcess As Long, lpExitCode As Long) As Long"
   Case Is = "getexitcodethread"
       sval = "Declare Function GetExitCodeThread Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetExitCodeThread" & Chr(34) & " (ByVal hThread As Long, lpExitCode As Long) As Long"
   Case Is = "getexpandedname"
       sval = "Declare Function GetExpandedName Lib " & Chr(34) & "lz32.dll" & Chr(34) & " Alias " & Chr(34) & "GetExpandedNameA" & Chr(34) & " (ByVal lpszSource As String, ByVal lpszBuffer As String) As Long"
   Case Is = "getfileattributes"
       sval = "Declare Function GetFileAttributes Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetFileAttributesA" & Chr(34) & " (ByVal lpFileName As String) As Long"
   Case Is = "getfileinformationbyhandle"
       sval = "Declare Function GetFileInformationByHandle Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hFile As Long, lpFileInformation As BY_HANDLE_FILE_INFORMATION) As Long"
   Case Is = "getfilenamefrombrowse"
       sval = "Declare Function GetFileNameFromBrowse Lib " & Chr(34) & "shell32" & Chr(34) & " Alias " & Chr(34) & "#63" & Chr(34) & " (ByVal hwndOwner As Long, ByVal lpstrFile As String, ByVal nMaxFile As Long, ByVal lpstrInitialDir As String, ByVal lpstrDefExt As String, ByVal lpstrFilter As String, ByVal lpstrTitle As String) As Long"
   Case Is = "getfilesecurity"
       sval = "Declare Function GetFileSecurity Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "GetFileSecurityA" & Chr(34) & " (ByVal lpFileName As String, ByVal RequestedInformation As Long, pSecurityDescriptor As Byte, ByVal nLength As Long, lpnLengthNeeded As Long) As Long"
   Case Is = "getfilesize"
       sval = "Declare Function GetFileSize Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetFileSize" & Chr(34) & " (ByVal hFile As Long, lpFileSizeHigh As Long) As Long"
   Case Is = "getfilesizeex"
       sval = "Declare Function GetFileSizeEx Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hFile As Long, lpFileSize As Currency) As Boolean"
   Case Is = "getfiletime"
       sval = "Declare Function GetFileTime Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetFileTime" & Chr(34) & " (ByVal hFile As Long, lpCreationTime As FILETIME, lpLastAccessTime As FILETIME, lpLastWriteTime As FILETIME) As Long"
   Case Is = "getfiletitle"
       sval = "Declare Function GetFileTitle Lib " & Chr(34) & "comdlg32.dll" & Chr(34) & " Alias " & Chr(34) & "GetFileTitleA" & Chr(34) & " (ByVal lpszFile As String, ByVal lpszTitle As String, ByVal cbBuf As Integer) As Integer"
   Case Is = "getfiletype"
       sval = "Declare Function GetFileType Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetFileType" & Chr(34) & " (ByVal hFile As Long) As Long"
   Case Is = "getfileversioninfo"
       sval = "Declare Function GetFileVersionInfo Lib " & Chr(34) & "version.dll" & Chr(34) & "  Alias " & Chr(34) & "GetFileVersionInfoA" & Chr(34) & " (ByVal lptstrFilename As String, ByVal dwHandle As Long, ByVal dwLen As Long, lpData As Any) As Long"
   Case Is = "getfileversioninfosize"
       sval = "Declare Function GetFileVersionInfoSize Lib " & Chr(34) & "version.dll" & Chr(34) & " Alias " & Chr(34) & "GetFileVersionInfoSizeA" & Chr(34) & " (ByVal lptstrFilename As String, lpdwHandle As Long) As Long"
   Case Is = "getfocus"
       sval = "Declare Function GetFocus Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetFocus" & Chr(34) & " () As Long"
   Case Is = "getforegroundwindow"
       sval = "Declare Function GetForegroundWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetForegroundWindow" & Chr(34) & " () As Long"
   Case Is = "getfreeresources"
       sval = "Declare Function GetFreeResources Lib " & Chr(34) & "RSRC32" & Chr(34) & " Alias " & Chr(34) & "_MyGetFreeSystemResources32@4" & Chr(34) & " (ByVal lWhat As Long) As Long"
   Case Is = "getfullpathname"
       sval = "Declare Function GetFullPathName Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetFullPathNameA" & Chr(34) & " (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, ByVal lpFilePart As String) As Long"
   Case Is = "getguiresources"
       sval = "Declare Function GetGuiResources Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal hProcess As Long, ByVal uiFlags As Long) As Long"
   Case Is = "getguithreadinfo"
       sval = "Declare Function GetGUIThreadInfo Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal dwthreadid As Long, lpguithreadinfo As GUITHREADINFO) As Long"
   Case Is = "gethostbyaddr"
       sval = "Declare Function gethostbyaddr Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (haddr As Long, ByVal hnlen As Long, ByVal addrtype As Long) As Long"
   Case Is = "gethostbyname"
       sval = "Declare Function gethostbyname Lib " & Chr(34) & "WSOCK32" & Chr(34) & " (ByVal szHost As String) As Long"
   Case Is = "gethostname"
       sval = "Declare Function gethostname Lib " & Chr(34) & "WSOCK32" & Chr(34) & " (ByVal szHost As String, ByVal dwHostLen As Long) As Long"
   Case Is = "getinputstate"
       sval = "Declare Function GetInputState Lib " & Chr(34) & "user32" & Chr(34) & " () As Long"
   Case Is = "getipaddrtable"
       sval = "Declare Function GetIpAddrTable Lib " & Chr(34) & "IPHlpApi" & Chr(34) & " (pIPAdrTable As Byte, pdwSize As Long, ByVal Sort As Long) As Long"
   Case Is = "getipnettable"
       sval = "Declare Function GetIpNetTable Lib " & Chr(34) & "Iphlpapi" & Chr(34) & " (pIpNetTable As Byte, pdwSize As Long, ByVal bOrder As Long) As Long"
   Case Is = "getipstatistics"
       sval = "Declare Function GetIpStatistics Lib " & Chr(34) & "iphlpapi" & Chr(34) & " (pStats As MIB_IPSTATS) As Long"
   Case Is = "getkeyboardlayoutname"
       sval = "Declare Function GetKeyboardLayoutName Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetKeyboardLayoutNameA" & Chr(34) & " (ByVal pwszKLID As String) As Long"
   Case Is = "getkeyboardstate"
       sval = "Declare Function GetKeyboardState Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetKeyboardState" & Chr(34) & " (pbKeyState As Byte) As Long"
   Case Is = "getkeyboardtype"
       sval = "Declare Function GetKeyboardType Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetKeyboardType" & Chr(34) & " (ByVal nTypeFlag As Long) As Long"
   Case Is = "getkeystate"
       sval = "Declare Function GetKeyState Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetKeyState" & Chr(34) & " (ByVal nVirtKey As Long) As Integer"
   Case Is = "getlasterror"
       sval = "Declare Function GetLastError Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetLastError" & Chr(34) & " () As Long"
   Case Is = "getlayout"
       sval = "Declare Function GetLayout Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "getlengthsid"
       sval = "Declare Function GetLengthSid Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (pSid As Any) As Long"
   Case Is = "getlocaleinfo"
       sval = "Declare Function GetLocaleInfo Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetLocaleInfoA" & Chr(34) & " (ByVal Locale As Long, ByVal LCType As Long, ByVal lpLCData As String, ByVal cchData As Long) As Long"
   Case Is = "getlocaltime"
       sval = "Declare Sub GetLocalTime Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetLocalTime" & Chr(34) & " (lpSystemTime As SYSTEMTIME)"
   Case Is = "getlogicaldrives"
       sval = "Declare Function GetLogicalDrives Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetLogicalDrives" & Chr(34) & " () As Long"
   Case Is = "getlogicaldrivestrings"
       sval = "Declare Function GetLogicalDriveStrings Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetLogicalDriveStringsA" & Chr(34) & " (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long"
   Case Is = "getmenu"
       sval = "Declare Function GetMenu Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetMenu" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "getmenuitemcount"
       sval = "Declare Function GetMenuItemCount Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetMenuItemCount" & Chr(34) & " (ByVal hMenu As Long) As Long"
   Case Is = "getmenuitemcount"
       sval = "Declare Function GetMenuItemCount Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetMenuItemCount" & Chr(34) & " (ByVal hMenu As Long) As Long"
   Case Is = "getmenuitemid"
       sval = "Declare Function GetMenuItemID Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetMenuItemID" & Chr(34) & " (ByVal hMenu As Long, ByVal nPos As Long) As Long"
   Case Is = "getmenuiteminfo"
       sval = "Declare Function GetMenuItemInfo Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetMenuItemInfoA" & Chr(34) & " (ByVal hMenu As Long, ByVal un As Long, ByVal b As Boolean, lpmii As MENUITEMINFO) As Long"
   Case Is = "getmenuitemrect"
       sval = "Declare Function GetMenuItemRect Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hwnd As Long, ByVal hMenu As Long, ByVal uItem As Long, lprcItem As RECT) As Long"
   Case Is = "getmessage"
       sval = "Declare Function GetMessage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetMessageA" & Chr(34) & " (lpMsg As MSG, ByVal hwnd As Long, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long) As Long"
   Case Is = "getmessageextrainfo"
       sval = "Declare Function GetMessageExtraInfo Lib " & Chr(34) & "user32" & Chr(34) & " () As Long"
   Case Is = "getmodulefilename"
       sval = "Declare Function GetModuleFileName Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetModuleFileNameA" & Chr(34) & " (ByVal hModule As Long, ByVal lpFileName As String, ByVal nSize As Long) As Long"
   Case Is = "getmodulefilenameex"
       sval = "Declare Function GetModuleFileNameEx Lib " & Chr(34) & "PSAPI.DLL" & Chr(34) & " (ByVal hProcess As Long, ByVal hModule As Long, ByVal ModuleName As String, ByVal nSize As Long) As Long"
   Case Is = "getmonitorinfo"
       sval = "Declare Function GetMonitorInfo Lib " & Chr(34) & "user32.dll" & Chr(34) & " Alias " & Chr(34) & "GetMonitorInfoA" & Chr(34) & " (ByVal hMonitor As Long, ByRef lpmi As MONITORINFO) As Long"
   Case Is = "getnativesysteminfo"
       sval = "Declare Sub GetNativeSystemInfo Lib " & Chr(34) & "kernel32" & Chr(34) & " (lpSystemInfo As SYSTEM_INFO)"
   Case Is = "getnearestcolor"
       sval = "Declare Function GetNearestColor Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetNearestColor" & Chr(34) & " (ByVal hdc As Long, ByVal crColor As Long) As Long"
   Case Is = "getnetworkparams"
       sval = "Declare Function GetNetworkParams Lib " & Chr(34) & "IPHlpApi" & Chr(34) & " (FixedInfo As Any, pOutBufLen As Long) As Long"
   Case Is = "getnumberformat"
       sval = "Declare Function GetNumberFormat Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetNumberFormatA" & Chr(34) & " (ByVal Locale As Long, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As NUMBERFMT, ByVal lpNumberStr As String, ByVal cchNumber As Long) As Long"
   Case Is = "getnumberofeventlogrecords"
       sval = "Declare Function GetNumberOfEventLogRecords Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hEventLog As Long, NumberOfRecords As Long) As Long"
   Case Is = "getobject"
       sval = "Declare Function GetObject Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetObjectA" & Chr(34) & " (ByVal hObject As Long, ByVal nCount As Long, lpObject As Any) As Long"
   Case Is = "getobjecttype"
       sval = "Declare Function GetObjectType Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetObjectType" & Chr(34) & " (ByVal hgdiobj As Long) As Long"
   Case Is = "getoldesteventlogrecord"
       sval = "Declare Function GetOldestEventLogRecord Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (ByVal hEventLog As Long, OldestRecord As Long) As Long"
   Case Is = "getopenfilename"
       sval = "Declare Function GetOpenFileName Lib " & Chr(34) & "comdlg32.dll" & Chr(34) & " Alias " & Chr(34) & "GetOpenFileNameA" & Chr(34) & " (pOpenfilename As OPENFILENAME) As Long"
   Case Is = "getopenfilenamepreview"
       sval = "Declare Function GetOpenFileNamePreview Lib " & Chr(34) & "msvfw32.dll" & Chr(34) & " (ByRef lpofn As OPENFILENAME) As Long"
   Case Is = "getparent"
       sval = "Declare Function GetParent Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetParent" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "getpixel"
       sval = "Declare Function GetPixel Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetPixel" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "getpolyfillmode"
       sval = "Declare Function GetPolyFillMode Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "getprinter"
       sval = "Declare Function GetPrinter Lib " & Chr(34) & "winspool.drv" & Chr(34) & " Alias " & Chr(34) & "GetPrinterA" & Chr(34) & " (ByVal hPrinter As Long, ByVal Level As Long, buffer As Long, ByVal pbSize As Long, pbSizeNeeded As Long) As Long"
   Case Is = "getpriorityclass"
       sval = "Declare Function GetPriorityClass Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetPriorityClass" & Chr(34) & " (ByVal hProcess As Long) As Long"
   Case Is = "getprivateprofileint"
       sval = "Declare Function GetPrivateProfileInt Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetPrivateProfileIntA" & Chr(34) & " (ByVal lpApplicationName As String, ByVal lpKeyName As String, ByVal nDefault As Long, ByVal lpFileName As String) As Long"
   Case Is = "getprivateprofilesection"
       sval = "Declare Function GetPrivateProfileSection Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetPrivateProfileSectionA" & Chr(34) & " (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long"
   Case Is = "getprivateprofilesection"
       sval = "Declare Function GetPrivateProfileSection Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetPrivateProfileSectionA" & Chr(34) & " (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long"
   Case Is = "getprivateprofilestring"
       sval = "Declare Function GetPrivateProfileString Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetPrivateProfileStringA" & Chr(34) & " (ByVal lpApplicationName As String, ByVal lpKeyName As Any, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long"
   Case Is = "getprocaddress"
       sval = "Declare Function GetProcAddress Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetProcAddress" & Chr(34) & " (ByVal hModule As Long, ByVal lpProcName As String) As Long"
   Case Is = "getprocessheap"
       sval = "Declare Function GetProcessHeap Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetProcessHeap" & Chr(34) & " () As Long"
   Case Is = "getprocessmemoryinfo"
       sval = "Declare Function GetProcessMemoryInfo Lib " & Chr(34) & "PSAPI.DLL" & Chr(34) & " (ByVal hProcess As Long, ppsmemCounters As PROCESS_MEMORY_COUNTERS, ByVal cb As Long) As Long"
   Case Is = "getprocesstimes"
       sval = "Declare Function GetProcessTimes Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hProcess As Long, lpCreationTime As FILETIME, lpExitTime As FILETIME, lpKernelTime As FILETIME, lpUserTime As FILETIME) As Long"
   Case Is = "getprocesswindowstation"
       sval = "Declare Function GetProcessWindowStation Lib " & Chr(34) & "user32" & Chr(34) & " () As Long"
   Case Is = "getprofileint"
       sval = "Declare Function GetProfileInt Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetProfileIntA" & Chr(34) & " (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal nDefault As Long) As Long"
   Case Is = "getprofilesdirectory"
       sval = "Declare Function GetProfilesDirectory Lib " & Chr(34) & "userenv.dll" & Chr(34) & " Alias " & Chr(34) & "GetProfilesDirectoryA" & Chr(34) & " (ByVal lpProfileDir As String, lpcchSize As Long) As Boolean"
   Case Is = "getprop"
       sval = "Declare Function GetProp Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetPropA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpString As String) As Long"
   Case Is = "getpwrcapabilities"
       sval = "Declare Function GetPwrCapabilities Lib " & Chr(34) & "Powrprof" & Chr(34) & " (lpSystemPowerCapabilities As SYSTEM_POWER_CAPABILITIES) As Long"
   Case Is = "getqueuestatus"
       sval = "Declare Function GetQueueStatus Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal fuFlags As Long) As Long"
   Case Is = "getrgnbox"
       sval = "Declare Function GetRgnBox Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetRgnBox" & Chr(34) & " (ByVal hRgn As Long, lpRect As RECT) As Long"
   Case Is = "getrop2"
       sval = "Declare Function GetROP2 Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "getsavefilename"
       sval = "Declare Function GetSaveFileName Lib " & Chr(34) & "comdlg32.dll" & Chr(34) & " Alias " & Chr(34) & "GetSaveFileNameA" & Chr(34) & " (pOpenfilename As OPENFILENAME) As Long"
   Case Is = "getsavefilenamepreview"
       sval = "Declare Function GetSaveFileNamePreview Lib " & Chr(34) & "msvfw32.dll" & Chr(34) & " Alias " & Chr(34) & "GetSaveFileNamePreviewA" & Chr(34) & " (ByRef lpofn As OPENFILENAME) As Long"
   Case Is = "getsecuritydescriptordacl"
       sval = "Declare Function GetSecurityDescriptorDacl Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (pSecurityDescriptor As Byte, lpbDaclPresent As Long, pDacl As Long, lpbDaclDefaulted As Long) As Long"
   Case Is = "getshortpathname"
       sval = "Declare Function GetShortPathName Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetShortPathNameA" & Chr(34) & " (ByVal lpszLongPath As String, ByVal lpszShortPath As String, ByVal cchBuffer As Long) As Long"
   Case Is = "getsockopt"
       sval = "Declare Function getsockopt Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal s As Long, ByVal Level As Long, ByVal optname As Long, optval As Any, optlen As Long) As Long"
   Case Is = "getstartupinfo"
       sval = "Declare Sub GetStartupInfo Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetStartupInfoA" & Chr(34) & " (lpStartupInfo As STARTUPINFO)"
   Case Is = "getstartupinfo"
       sval = "Declare Sub GetStartupInfo Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetStartupInfoA" & Chr(34) & " (lpStartupInfo As STARTUPINFO)"
   Case Is = "getstdhandle"
       sval = "Declare Function GetStdHandle Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal nStdHandle As Long) As Long"
   Case Is = "getstockobject"
       sval = "Declare Function GetStockObject Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetStockObject" & Chr(34) & " (ByVal nIndex As Long) As Long"
   Case Is = "getstretchbltmode"
       sval = "Declare Function GetStretchBltMode Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetStretchBltMode" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "getsubmenu"
       sval = "Declare Function GetSubMenu Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetSubMenu" & Chr(34) & " (ByVal hMenu As Long, ByVal nPos As Long) As Long"
   Case Is = "getsyscolor"
       sval = "Declare Function GetSysColor Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetSysColor" & Chr(34) & " (ByVal nIndex As Long) As Long"
   Case Is = "getsyscolorbrush"
       sval = "Declare Function GetSysColorBrush Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetSysColorBrush" & Chr(34) & " (ByVal nIndex As Long) As Long"
   Case Is = "getsystemdirectory"
       sval = "Declare Function GetSystemDirectory Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetSystemDirectoryA" & Chr(34) & " (ByVal lpBuffer As String, ByVal nSize As Long) As Long"
   Case Is = "getsysteminfo"
       sval = "Declare Sub GetSystemInfo Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetSystemInfo" & Chr(34) & " (lpSystemInfo As SYSTEM_INFO)"
   Case Is = "getsystemmenu"
       sval = "Declare Function GetSystemMenu Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetSystemMenu" & Chr(34) & " (ByVal hwnd As Long, ByVal bRevert As Long) As Long"
   Case Is = "getsystemmetrics"
       sval = "Declare Function GetSystemMetrics Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetSystemMetrics" & Chr(34) & " (ByVal nIndex As Long) As Long"
   Case Is = "getsystempaletteentries"
       sval = "Declare Function GetSystemPaletteEntries Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetSystemPaletteEntries" & Chr(34) & " (ByVal hdc As Long, ByVal wStartIndex As Long, ByVal wNumEntries As Long, lpPaletteEntries As PALETTEENTRY) As Long"
   Case Is = "getsystempowerstatus"
       sval = "Declare Function GetSystemPowerStatus Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetSystemPowerStatus" & Chr(34) & " (lpSystemPowerStatus As SYSTEM_POWER_STATUS) As Long"
   Case Is = "getsystemtime"
       sval = "Declare Sub GetSystemTime Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetSystemTime" & Chr(34) & " (lpSystemTime As SYSTEMTIME)"
   Case Is = "getsystemtimeadjustment"
       sval = "Declare Function GetSystemTimeAdjustment Lib " & Chr(34) & "kernel32" & Chr(34) & " (lpTimeAdjustment As Long, lpTimeIncrement As Long, lpTimeAdjustmentDisabled As Boolean) As Long"
   Case Is = "gettapeparameters"
       sval = "Declare Function GetTapeParameters Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetTapeParameters" & Chr(34) & " (ByVal hDevice As Long, ByVal dwOperation As Long, lpdwSize As Long, lpTapeInformation As Any) As Long"
   Case Is = "gettapeposition"
       sval = "Declare Function GetTapePosition Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetTapePosition" & Chr(34) & " (ByVal hDevice As Long, ByVal dwPositionType As Long, lpdwPartition As Long, lpdwOffsetLow As Long, lpdwOffsetHigh As Long) As Long"
   Case Is = "gettapestatus"
       sval = "Declare Function GetTapeStatus Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetTapeStatus" & Chr(34) & " (ByVal hDevice As Long) As Long"
   Case Is = "gettcpstatistics"
       sval = "Declare Function GetTcpStatistics Lib " & Chr(34) & "iphlpapi" & Chr(34) & " (pStats As PMIB_TCPSTATS) As Long"
   Case Is = "gettcptable"
       sval = "Declare Function GetTcpTable Lib " & Chr(34) & "iphlpapi.dll" & Chr(34) & " (ByRef pTcpTable As Any, ByRef pdwSize As Long, ByVal bOrder As Long) As Long"
   Case Is = "gettempfilename"
       sval = "Declare Function GetTempFileName Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetTempFileNameA" & Chr(34) & " (ByVal lpszPath As String, ByVal lpPrefixString As String, ByVal wUnique As Long, ByVal lpTempFileName As String) As Long"
   Case Is = "gettemppath"
       sval = "Declare Function GetTempPath Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetTempPathA" & Chr(34) & " (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long"
   Case Is = "gettextextentpoint32"
       sval = "Declare Function GetTextExtentPoint32 Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetTextExtentPoint32A" & Chr(34) & " (ByVal hdc As Long, ByVal lpsz As String, ByVal cbString As Long, lpSize As SIZE) As Long"
   Case Is = "gettextmetrics"
       sval = "Declare Function GetTextMetrics Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "GetTextMetricsA" & Chr(34) & " (ByVal hdc As Long, lpMetrics As TEXTMETRIC) As Long"
   Case Is = "getthreadlocale"
       sval = "Declare Function GetThreadLocale Lib " & Chr(34) & "KERNEL32" & Chr(34) & " Alias " & Chr(34) & "GetThreadLocale" & Chr(34) & " () As Long"
   Case Is = "getthreadpriority"
       sval = "Declare Function GetThreadPriority Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetThreadPriority" & Chr(34) & " (ByVal hThread As Long) As Long"
   Case Is = "getthreadtimes"
       sval = "Declare Function GetThreadTimes Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hThread As Long, lpCreationTime As FILETIME, lpExitTime As FILETIME, lpKernelTime As FILETIME, lpUserTime As FILETIME) As Long"
   Case Is = "gettickcount"
       sval = "Declare Function GetTickCount Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetTickCount" & Chr(34) & " () As Long"
   Case Is = "gettitlebarinfo"
       sval = "Declare Function GetTitleBarInfo Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal hwnd As Long, ByRef pti As TITLEBARINFO) As Long"
   Case Is = "gettokeninformation"
       sval = "Declare Function GetTokenInformation Lib " & Chr(34) & "Advapi32" & Chr(34) & " (ByVal TokenHandle As Long, TokenInformationClass As Integer, TokenInformation As Any, ByVal TokenInformationLength As Long, ReturnLength As Long) As Long"
   Case Is = "getusername"
       sval = "Declare Function GetUserName Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "GetUserNameA" & Chr(34) & " (ByVal lpBuffer As String, nSize As Long) As Long"
   Case Is = "getusernameex"
       sval = "Declare Function GetUserNameEx Lib " & Chr(34) & "secur32.dll" & Chr(34) & " Alias " & Chr(34) & "GetUserNameExA" & Chr(34) & " (ByVal NameFormat As EXTENDED_NAME_FORMAT, ByVal lpNameBuffer As String, ByRef nSize As Long) As Long"
   Case Is = "getuserprofiledirectory"
       sval = "Declare Function GetUserProfileDirectory Lib " & Chr(34) & "userenv.dll" & Chr(34) & " Alias " & Chr(34) & "GetUserProfileDirectoryA" & Chr(34) & " (ByVal hToken As Long, ByVal lpProfileDir As String, lpcchSize As Long) As Boolean"
   Case Is = "getversion"
       sval = "Declare Function GetVersion Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetVersion" & Chr(34) & " () As Long"
   Case Is = "getversionex"
       sval = "Declare Function GetVersionEx Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetVersionExA" & Chr(34) & " (ByVal lpVersionInformation As OSVERSIONINFO) As Long"
   Case Is = "getvolumeinformation"
       sval = "Declare Function GetVolumeInformation Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetVolumeInformationA" & Chr(34) & " (ByVal lpRootPathName As String, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As Long, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As Long"
   Case Is = "getwindow"
       sval = "Declare Function GetWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetWindow" & Chr(34) & " (ByVal hwnd As Long, ByVal wCmd As Long) As Long"
   Case Is = "getwindowdc"
       sval = "Declare Function GetWindowDC Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetWindowDC" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "getwindowlong"
       sval = "Declare Function GetWindowLong Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetWindowLongA" & Chr(34) & " (ByVal hwnd As Long, ByVal nIndex As Long) As Long"
   Case Is = "getwindowplacement"
       sval = "Declare Function GetWindowPlacement Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hwnd As Long, lpwndpl As WINDOWPLACEMENT) As Long"
   Case Is = "getwindowrect"
       sval = "Declare Function GetWindowRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetWindowRect" & Chr(34) & " (ByVal hwnd As Long, lpRect As RECT) As Long"
   Case Is = "getwindowsdirectory"
       sval = "Declare Function GetWindowsDirectory Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GetWindowsDirectoryA" & Chr(34) & " (ByVal lpBuffer As String, ByVal nSize As Long) As Long"
   Case Is = "getwindowtext"
       sval = "Declare Function GetWindowText Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetWindowTextA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpString As String, ByVal cch As Long) As Long"
   Case Is = "getwindowtextlength"
       sval = "Declare Function GetWindowTextLength Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetWindowTextLengthA" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "getwindowtextlength"
       sval = "Declare Function GetWindowTextLength Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetWindowTextLengthA" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "getwindowthreadprocessid"
       sval = "Declare Function GetWindowThreadProcessId Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetWindowThreadProcessId" & Chr(34) & " (ByVal hwnd As Long, lpdwProcessId As Long) As Long"
   Case Is = "getwindowword"
       sval = "Declare Function GetWindowWord Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GetWindowWord" & Chr(34) & " (ByVal hwnd As Long, ByVal nIndex As Long) As Integer"
   Case Is = "globalalloc"
       sval = "Declare Function GlobalAlloc Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GlobalAlloc" & Chr(34) & " (ByVal wFlags As Long, ByVal dwBytes As Long) As Long"
   Case Is = "globalfree"
       sval = "Declare Function GlobalFree Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GlobalFree" & Chr(34) & " (ByVal hMem As Long) As Long"
   Case Is = "globalmemorystatus"
       sval = "Declare Sub GlobalMemoryStatus Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GlobalMemoryStatus" & Chr(34) & " (lpBuffer As MEMORYSTATUS)"
   Case Is = "globalmemorystatusex"
       sval = "Declare Function GlobalMemoryStatusEx Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " (ByRef lpBuffer As MEMORYSTATUSEX) As Long"
   Case Is = "globalunlock"
       sval = "Declare Function GlobalUnlock Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "GlobalUnlock" & Chr(34) & " (ByVal hMem As Long) As Long"
   Case Is = "gradientfillrect"
       sval = "Declare Function GradientFillRect Lib " & Chr(34) & "msimg32" & Chr(34) & " Alias " & Chr(34) & "GradientFill" & Chr(34) & " (ByVal hdc As Long, pVertex As TRIVERTEX, ByVal dwNumVertex As Long, pMesh As GRADIENT_RECT, ByVal dwNumMesh As Long, ByVal dwMode As Long) As Long"
   Case Is = "gradientfilltriangle"
       sval = "Declare Function GradientFillTriangle Lib " & Chr(34) & "msimg32" & Chr(34) & " Alias " & Chr(34) & "GradientFill" & Chr(34) & " (ByVal hDC As Long, pVertex As TRIVERTEX, ByVal dwNumVertex As Long, pMesh As GRADIENT_TRIANGLE, ByVal dwNumMesh As Long, ByVal dwMode As Long) As Long"
   Case Is = "graystring"
       sval = "Declare Function GrayString Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "GrayStringA" & Chr(34) & " (ByVal hDC As Long, ByVal hBrush As Long, ByVal lpOutputFunc As Long, ByVal lpData As Long, ByVal nCount As Long, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long) As Long"
   Case Is = "heapalloc"
       sval = "Declare Function HeapAlloc Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "HeapAlloc" & Chr(34) & " (ByVal hHeap As Long, ByVal dwFlags As Long, ByVal dwBytes As Long) As Long"
   Case Is = "heapfree"
       sval = "Declare Function HeapFree Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "HeapFree" & Chr(34) & " (ByVal hHeap As Long, ByVal dwFlags As Long, lpMem As Any) As Long"
   Case Is = "hibyte"
       sval = "Declare Function HiByte Lib " & Chr(34) & "TLBINF32" & Chr(34) & " Alias " & Chr(34) & "hibyte" & Chr(34) & " (ByVal Word As Integer) As Byte"
   Case Is = "hidecaret"
       sval = "Declare Function HideCaret Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "hiword"
       sval = "Declare Function hiword Lib " & Chr(34) & "TLBINF32" & Chr(34) & " (ByVal DWord As Long) As Integer"
   Case Is = "htmlhelp"
       sval = "Declare Function HtmlHelp Lib " & Chr(34) & "hhctrl.ocx" & Chr(34) & " Alias " & Chr(34) & "HtmlHelpA" & Chr(34) & " (ByVal hwndCaller As Long, ByVal pszFile As String, ByVal uCommand As Long, ByVal dwData As Long) As Long"
   Case Is = "htons"
       sval = "Declare Function htons Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal hostshort As Long) As Integer"
   Case Is = "icmpclosehandle"
       sval = "Declare Function IcmpCloseHandle Lib " & Chr(34) & "icmp.dll" & Chr(34) & " (ByVal HANDLE As Long) As Boolean"
   Case Is = "icmpcreatefile"
       sval = "Declare Function IcmpCreateFile Lib " & Chr(34) & "icmp.dll" & Chr(34) & " () As Long"
   Case Is = "icmpsendecho"
       sval = "Private Declare Function IcmpSendEcho Lib " & Chr(34) & "ICMP" & Chr(34) & " (ByVal IcmpHandle As Long, ByVal DestAddress As Long, ByVal RequestData As String, ByVal RequestSize As Integer, RequestOptns As IP_OPTION_INFORMATION, ReplyBuffer As IP_ECHO_REPLY, ByVal ReplySize As Long, ByVal TimeOut As Long) As Boolean"
   Case Is = "imagelist_draw"
       sval = "Declare Function ImageList_Draw Lib " & Chr(34) & "comctl32.dll" & Chr(34) & " (ByVal himl As Long, ByVal i As Long, ByVal hdcDst As Long, ByVal x As Long, ByVal y As Long, ByVal fStyle As Long) As Long"
   Case Is = "imagelist_drawex"
       sval = "Declare Function ImageList_DrawEx Lib " & Chr(34) & "comctl32.dll" & Chr(34) & " (ByVal himl As Long, ByVal i As Long, ByVal hdcDst As Long, ByVal x As Long, ByVal y As Long, ByVal dx As Long, ByVal dy As Long, ByVal rgbBk As Long, ByVal rgbFg As Long, ByVal fStyle As Long) As Long"
   Case Is = "inet_addr"
       sval = "Declare Function inet_addr Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal cp As String) As Long"
   Case Is = "inet_ntoa"
       sval = "Declare Function inet_ntoa Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal inn As Long) As Long"
   Case Is = "inetisoffline"
       sval = "Declare Function InetIsOffline Lib " & Chr(34) & "url.dll" & Chr(34) & " (ByVal dwFlags As Long) As Long"
   Case Is = "inflaterect"
       sval = "Declare Function InflateRect Lib " & Chr(34) & "user32" & Chr(34) & " (lpRect As RECT, ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "initcommoncontrols"
       sval = "Declare Sub InitCommonControls Lib " & Chr(34) & "comctl32" & Chr(34) & " ()"
   Case Is = "initcommoncontrolsex"
       sval = "Declare Function InitCommonControlsEx Lib " & Chr(34) & "comctl32" & Chr(34) & " (init As InitCommonControlsExType) As Boolean"
   Case Is = "initializeacl"
       sval = "Declare Function InitializeAcl Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (pAcl As Byte, ByVal nAclLength As Long, ByVal dwAclRevision As Long) As Long"
   Case Is = "initializeflatsb"
       sval = "Declare Function InitializeFlatSB Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long) As Long"
   Case Is = "initializesecuritydescriptor"
       sval = "Declare Function InitializeSecurityDescriptor Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal dwRevision As Long) As Long"
   Case Is = "initiatesystemshutdown"
       sval = "Declare Function InitiateSystemShutdown Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "InitiateSystemShutdownA" & Chr(34) & " (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwTimeout As Long, ByVal bForceAppsClosed As Long, ByVal bRebootAfterShutdown As Long) As Long"
   Case Is = "insertmenuitem"
       sval = "Declare Function InsertMenuItem Lib " & Chr(34) & "user32.dll" & Chr(34) & " Alias " & Chr(34) & "InsertMenuItemA" & Chr(34) & " (ByVal hMenu As Long, ByVal uItem As Long, ByVal fByPosition As Long, lpmii As MENUITEMINFO) As Long"
   Case Is = "internetattemptconnect"
       sval = "Declare Function InternetAttemptConnect Lib " & Chr(34) & "wininet" & Chr(34) & " (ByVal dwReserved As Long) As Long"
   Case Is = "internetcheckconnection"
       sval = "Declare Function InternetCheckConnection Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "InternetCheckConnectionA" & Chr(34) & " (ByVal lpszUrl As String, ByVal dwFlags As Long, ByVal dwReserved As Long) As Long"
   Case Is = "internetclosehandle"
       sval = "Declare Function InternetCloseHandle Lib " & Chr(34) & "wininet" & Chr(34) & " (ByVal hInet As Long) As Integer"
   Case Is = "internetcombineurl"
       sval = "Declare Sub InternetCombineUrl Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "InternetCombineUrlA" & Chr(34) & " (ByVal lpszBaseUrl As String, ByVal lpszRelativeUrl As String, ByVal lpszBuffer As String, ByRef lpdwBufferLength As Long, ByVal dwFlags As Long)"
   Case Is = "internetconnect"
       sval = "Declare Function InternetConnect Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "InternetConnectA" & Chr(34) & " (ByVal hInternetSession As Long, ByVal sServerName As String, ByVal nServerPort As Integer, ByVal sUserName As String, ByVal sPassword As String, ByVal lService As Long, ByVal lFlags As Long, ByVal lContext As Long) As Long"
   Case Is = "internetfindnextfile"
       sval = "Declare Function InternetFindNextFile Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "InternetFindNextFileA" & Chr(34) & " (ByVal hFind As Long, lpvFindData As WIN32_FIND_DATA) As Long"
   Case Is = "internetgetconnectedstate"
       sval = "Declare Function InternetGetConnectedState Lib " & Chr(34) & "wininet.dll" & Chr(34) & " (ByRef lpdwFlags As Long, ByVal dwReserved As Long) As Long"
   Case Is = "internetgetconnectedstateex"
       sval = "Declare Function InternetGetConnectedStateEx Lib " & Chr(34) & "wininet.dll" & Chr(34) & " (ByRef lpdwFlags As Long, ByVal lpszConnectionName As String, ByVal dwNameLen As Integer, ByVal dwReserved As Long) As Long"
   Case Is = "internetgetlastresponseinfo"
       sval = "Declare Function InternetGetLastResponseInfo Lib " & Chr(34) & "wininet.dll" & Chr(34) & " Alias " & Chr(34) & "InternetGetLastResponseInfoA" & Chr(34) & " (lpdwError As Long, ByVal lpszBuffer As String, lpdwBufferLength As Long) As Boolean"
   Case Is = "internetopen"
       sval = "Declare Function InternetOpen Lib " & Chr(34) & "wininet" & Chr(34) & " Alias " & Chr(34) & "InternetOpenA" & Chr(34) & " (ByVal sAgent As String, ByVal lAccessType As Long, ByVal sProxyName As String, ByVal sProxyBypass As String, ByVal lFlags As Long) As Long"
   Case Is = "internetopenurl"
       sval = "Declare Function InternetOpenUrl Lib " & Chr(34) & "wininet" & Chr(34) & " Alias " & Chr(34) & "InternetOpenUrlA" & Chr(34) & " (ByVal hInternetSession As Long, ByVal lpszUrl As String, ByVal lpszHeaders As String, ByVal dwHeadersLength As Long, ByVal dwFlags As Long, ByVal dwContext As Long) As Long"
   Case Is = "internetopenurl"
       sval = "Declare Function InternetOpenUrl Lib " & Chr(34) & "wininet" & Chr(34) & " Alias " & Chr(34) & "InternetOpenUrlA" & Chr(34) & " (ByVal hInternetSession As Long, ByVal lpszUrl As String, ByVal lpszHeaders As String, ByVal dwHeadersLength As Long, ByVal dwFlags As Long, ByVal dwContext As Long) As Long"
   Case Is = "internetreadfile"
       sval = "Declare Function InternetReadFile Lib " & Chr(34) & "wininet" & Chr(34) & " (ByVal hFile As Long, ByVal sBuffer As String, ByVal lNumBytesToRead As Long, lNumberOfBytesRead As Long) As Integer"
   Case Is = "intersectcliprect"
       sval = "Declare Function IntersectClipRect Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "IntersectClipRect" & Chr(34) & " (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long"
   Case Is = "intersectrect"
       sval = "Declare Function IntersectRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IntersectRect" & Chr(34) & " (lpDestRect As RECT, lpSrc1Rect As RECT, lpSrc2Rect As RECT) As Long"
   Case Is = "invertrect"
       sval = "Declare Function InvertRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "InvertRect" & Chr(34) & " (ByVal hdc As Long, lpRect As RECT) As Long"
   Case Is = "invertrgn"
       sval = "Declare Function InvertRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "InvertRgn" & Chr(34) & " (ByVal hdc As Long, ByVal hRgn As Long) As Long"
   Case Is = "isbadreadptr"
       sval = "Declare Function IsBadReadPtr Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal lp As Long, ByVal ucb As Long) As Long"
   Case Is = "isbadstringptr"
       sval = "Private Declare Function IsBadStringPtr Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "IsBadStringPtrA" & Chr(34) & " (ByVal lpsz As Long, ByVal ucchMax As Long) As Long"
   Case Is = "isbadwriteptr"
       sval = "Declare Function IsBadWritePtr Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal lp As Long, ByVal ucb As Long) As Long"
   Case Is = "ischaralpha"
       sval = "Declare Function IsCharAlpha Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsCharAlphaA" & Chr(34) & " (ByVal cChar As Byte) As Long"
   Case Is = "ischaralphanumeric"
       sval = "Declare Function IsCharAlphaNumeric Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsCharAlphaNumericA" & Chr(34) & " (ByVal cChar As Byte) As Long"
   Case Is = "ischarlower"
       sval = "Declare Function IsCharLower Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsCharLowerA" & Chr(34) & " (ByVal cChar As Byte) As Long"
   Case Is = "ischarupper"
       sval = "Declare Function IsCharUpper Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsCharUpperA" & Chr(34) & " (ByVal cChar As Byte) As Long"
   Case Is = "ischild"
       sval = "Declare Function IsChild Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsChild" & Chr(34) & " (ByVal hWndParent As Long, ByVal hwnd As Long) As Long"
   Case Is = "isclipboardformatavailable"
       sval = "Declare Function IsClipboardFormatAvailable Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsClipboardFormatAvailable" & Chr(34) & " (ByVal wFormat As Long) As Long"
   Case Is = "isdebuggerpresent"
       sval = "Declare Function IsDebuggerPresent Lib " & Chr(34) & "kernel32" & Chr(34) & " () As Long"
   Case Is = "isdestinationreachable"
       sval = "Declare Function IsDestinationReachable Lib " & Chr(34) & "SENSAPI.DLL" & Chr(34) & " Alias " & Chr(34) & "IsDestinationReachableA" & Chr(34) & " (ByVal lpszDestination As String, ByRef lpQOCInfo As QOCINFO) As Long"
   Case Is = "isiconic"
       sval = "Declare Function IsIconic Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsIconic" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "isnetworkalive"
       sval = "Declare Function IsNetworkAlive Lib " & Chr(34) & "SENSAPI.DLL" & Chr(34) & " (ByRef lpdwFlags As Long) As Long"
   Case Is = "isntadmin"
       sval = "Declare Function IsNTAdmin Lib " & Chr(34) & "advpack.dll" & Chr(34) & " (ByVal dwReserved As Long, ByRef lpdwReserved As Long) As Long"
   Case Is = "isprocessorfeaturepresent"
       sval = "Declare Function IsProcessorFeaturePresent Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " (ByVal ProcessorFeature As Long) As Long"
   Case Is = "ispwrhibernateallowed"
       sval = "Declare Function IsPwrHibernateAllowed Lib " & Chr(34) & "Powrprof.dll" & Chr(34) & " () As Long"
   Case Is = "ispwrshutdownallowed"
       sval = "Declare Function IsPwrShutdownAllowed Lib " & Chr(34) & "Powrprof.dll" & Chr(34) & " () As Long"
   Case Is = "ispwrsuspendallowed"
       sval = "Declare Function IsPwrSuspendAllowed Lib " & Chr(34) & "Powrprof.dll" & Chr(34) & " () As Long"
   Case Is = "isrectempty"
       sval = "Declare Function IsRectEmpty Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsRectEmpty" & Chr(34) & " (lpRect As RECT) As Long"
   Case Is = "issystemresumeautomatic"
       sval = "Declare Function IsSystemResumeAutomatic Lib " & Chr(34) & "kernel32" & Chr(34) & " () As Long"
   Case Is = "istextunicode"
       sval = "Declare Function IsTextUnicode Lib " & Chr(34) & "advapi32" & Chr(34) & " (ByVal lpBuffer As String, ByVal cb As Long, lpi As Long) As Long"
   Case Is = "isvalidsid"
       sval = "Declare Function IsValidSid Lib " & Chr(34) & "Advapi32" & Chr(34) & " (ByVal pSid As Long) As Long"
   Case Is = "isvalidurl"
       sval = "Declare Function IsValidURL Lib " & Chr(34) & "URLMON.DLL" & Chr(34) & " (ByVal pbc As Long, ByVal szURL As String, ByVal dwReserved As Long) As Long"
   Case Is = "iswindow"
       sval = "Declare Function IsWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsWindow" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "iswindowenabled"
       sval = "Declare Function IsWindowEnabled Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsWindowEnabled" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "iswindowvisible"
       sval = "Declare Function IsWindowVisible Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsWindowVisible" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "iswow64process"
       sval = "Declare Function IsWow64Process Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hProcess As Long, ByRef Wow64Process As Long) As Long"
   Case Is = "iszoomed"
       sval = "Declare Function IsZoomed Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "IsZoomed" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "joygetdevcaps"
       sval = "Declare Function joyGetDevCaps Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "joyGetDevCapsA" & Chr(34) & " (ByVal id As Long, lpCaps As JOYCAPS, ByVal uSize As Long) As Long"
   Case Is = "joygetnumdevs"
       sval = "Declare Function joyGetNumDevs Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "joyGetNumDev" & Chr(34) & " () As Long"
   Case Is = "joygetpos"
       sval = "Declare Function joyGetPos Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "joyGetPos" & Chr(34) & " (ByVal uJoyID As Long, pji As JOYINFO) As Long"
   Case Is = "keybd_event"
       sval = "Declare Sub keybd_event Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)"
   Case Is = "killtimer"
       sval = "Declare Function KillTimer Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "KillTimer" & Chr(34) & " (ByVal hwnd As Long, ByVal nIDEvent As Long) As Long"
   Case Is = "lineto"
       sval = "Declare Function LineTo Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "LineTo" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "loadcursor"
       sval = "Declare Function LoadCursor Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "LoadCursorA" & Chr(34) & " (ByVal hInstance As Long, ByVal lpCursorName As String) As Long"
   Case Is = "loadcursorfromfile"
       sval = "Declare Function LoadCursorFromFile Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "LoadCursorFromFileA" & Chr(34) & " (ByVal lpFileName As String) As Long"
   Case Is = "loadicon"
       sval = "Declare Function LoadIcon Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "LoadIconA" & Chr(34) & " (ByVal hInstance As Long, ByVal lpIconName As Long) As Long"
   Case Is = "loadimage"
       sval = "Declare Function LoadImage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "LoadImageA" & Chr(34) & " (ByVal hInst As Long, ByVal lpsz As String, ByVal un1 As Long, ByVal n1 As Long, ByVal n2 As Long, ByVal un2 As Long) As Long"
   Case Is = "loadimage"
       sval = "Declare Function LoadImage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "LoadImageA" & Chr(34) & " (ByVal hInst As Long, ByVal lpsz As String, ByVal un1 As Long, ByVal n1 As Long, ByVal n2 As Long, ByVal un2 As Long) As Long"
   Case Is = "loadkeyboardlayout"
       sval = "Declare Function LoadKeyboardLayout Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "LoadKeyboardLayoutA" & Chr(34) & " (ByVal pwszKLID As String, ByVal flags As Long) As Long"
   Case Is = "loadlibrary"
       sval = "Declare Function LoadLibrary Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "LoadLibraryA" & Chr(34) & " (ByVal lpLibFileName As String) As Long"
   Case Is = "loadlibraryex"
       sval = "Declare Function LoadLibraryEx Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "LoadLibraryExA" & Chr(34) & " (ByVal lpLibFileName As String, ByVal hFile As Long, ByVal dwFlags As Long) As Long"
   Case Is = "lobyte"
       sval = "Declare Function LoByte Lib " & Chr(34) & "TLBINF32" & Chr(34) & " Alias " & Chr(34) & "lobyte" & Chr(34) & " (ByVal Word As Integer) As Byte"
   Case Is = "localfiletimetofiletime"
       sval = "Declare Function LocalFileTimeToFileTime Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "LocalFileTimeToFileTime" & Chr(34) & " (lpLocalFileTime As FILETIME, lpFileTime As FILETIME) As Long"
   Case Is = "lockwindowupdate"
       sval = "Declare Function LockWindowUpdate Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "LockWindowUpdate" & Chr(34) & " (ByVal hwndLock As Long) As Long"
   Case Is = "lockworkstation"
       sval = "Declare Function LockWorkStation Lib " & Chr(34) & "user32.dll" & Chr(34) & " () As Long"
   Case Is = "lookupaccountname"
       sval = "Declare Function LookupAccountName Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "LookupAccountNameA" & Chr(34) & " (lpSystemName As String, ByVal lpAccountName As String, sid As Any, cbSid As Long, ByVal ReferencedDomainName As String, cbReferencedDomainName As Long, peUse As Long) As Long"
   Case Is = "lookupprivilegevalue"
       sval = "Declare Function LookupPrivilegeValue Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "LookupPrivilegeValueA" & Chr(34) & " (ByVal lpSystemName As String, ByVal lpName As String, lpLuid As LARGE_INTEGER) As Long"
   Case Is = "loword"
       sval = "Declare Function loword Lib " & Chr(34) & "TLBINF32" & Chr(34) & " (ByVal DWord As Long) As Integer"
   Case Is = "lstrcat"
       sval = "Declare Function lstrcat Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "lstrcatA" & Chr(34) & " (ByVal lpString1 As String, ByVal lpString2 As String) As Long"
   Case Is = "lstrcmp"
       sval = "Declare Function lstrcmp Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "lstrcmpA" & Chr(34) & " (ByVal lpString1 As String, ByVal lpString2 As String) As Long"
   Case Is = "lstrcmpi"
       sval = "Declare Function lstrcmpi Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "lstrcmpiA" & Chr(34) & " (ByVal lpString1 As String, ByVal lpString2 As String) As Long"
   Case Is = "lstrcpy"
       sval = "Declare Function lstrcpy Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "lstrcpyA" & Chr(34) & " (ByVal lpString1 As String, ByVal lpString2 As String) As Long"
   Case Is = "lstrcpyn"
       sval = "Declare Function lstrcpyn Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "lstrcpynA" & Chr(34) & " (ByVal lpString1 As String, ByVal lpString2 As String, ByVal iMaxLength As Long) As Long"
   Case Is = "lstrlen"
       sval = "Declare Function lstrlen Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "lstrlenA" & Chr(34) & " (ByVal lpString As String) As Long"
   Case Is = "lstrlenw"
       sval = "Declare Function lstrlenW Lib " & Chr(34) & "kernel32" & Chr(34) & " (lpString As Any) As Long"
   Case Is = "lzclose"
       sval = "Declare Sub LZClose Lib " & Chr(34) & "lz32.dll" & Chr(34) & " Alias " & Chr(34) & "LZClose" & Chr(34) & " (ByVal hfFile As Long)"
   Case Is = "lzcopy"
       sval = "Declare Function LZCopy Lib " & Chr(34) & "lz32.dll" & Chr(34) & " Alias " & Chr(34) & "LZCopy" & Chr(34) & " (ByVal hfSource As Long, ByVal hfDest As Long) As Long"
   Case Is = "lzopenfile"
       sval = "Declare Function LZOpenFile Lib " & Chr(34) & "lz32.dll" & Chr(34) & " Alias " & Chr(34) & "LZOpenFileA" & Chr(34) & " (ByVal lpszFile As String, lpOf As OFSTRUCT, ByVal style As Long) As Long"
   Case Is = "makesuredirectorypathexists"
       sval = "Declare Function MakeSureDirectoryPathExists Lib " & Chr(34) & "imagehlp.dll" & Chr(34) & " (ByVal lpPath As String) As Long"
   Case Is = "mciexecute"
       sval = "Declare Function mciExecute Lib " & Chr(34) & "winmm.dll" & Chr(34) & " (ByVal lpstrCommand As String) As Long"
   Case Is = "mcigeterrorstring"
       sval = "Declare Function mciGetErrorString Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mciGetErrorStringA" & Chr(34) & " (ByVal dwError As Long, ByVal lpstrBuffer As String, ByVal uLength As Long) As Long"
   Case Is = "mcisendcommand"
       sval = "Declare Function mciSendCommand Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mciSendCommandA" & Chr(34) & " (ByVal wDeviceID As Long, ByVal uMessage As Long, ByVal dwParam1 As Long, ByRef dwParam2 As Any) As Long"
   Case Is = "mcisendstring"
       sval = "Declare Function mciSendString Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mciSendStringA" & Chr(34) & " (ByVal lpstrCommand As String, ByVal lpstrReturnString As String, ByVal uReturnLength As Long, ByVal hwndCallback As Long) As Long"
   Case Is = "messagebeep"
       sval = "Declare Function MessageBeep Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "MessageBeep" & Chr(34) & " (ByVal wType As Long) As Long"
   Case Is = "messagebox"
       sval = "Declare Function MessageBox Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "MessageBoxA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpText As String, ByVal lpCaption As String, ByVal wType As Long) As Long"
   Case Is = "messageboxex"
       sval = "Declare Function MessageBoxEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "MessageBoxExA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As Long, ByVal wLanguageId As Long) As Long"
   Case Is = "messageboxindirect"
       sval = "Declare Function MessageBoxIndirect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "MessageBoxIndirectA" & Chr(34) & " (lpMsgBoxParams As MSGBOXPARAMS) As Long"
   Case Is = "midioutclose"
       sval = "Declare Function midiOutClose Lib " & Chr(34) & "winmm.dll" & Chr(34) & " (ByVal hMidiOut As Long) As Long"
   Case Is = "midioutgetdevcaps"
       sval = "Declare Function midiOutGetDevCaps Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "midiOutGetDevCapsA" & Chr(34) & " (ByVal uDeviceID As Long, lpCaps As MIDIOUTCAPS, ByVal uSize As Long) As Long"
   Case Is = "midioutgetnumdevs"
       sval = "Declare Function midiOutGetNumDevs Lib " & Chr(34) & "winmm" & Chr(34) & " Alias " & Chr(34) & "midiOutGetNumDevs" & Chr(34) & " () As Integer"
   Case Is = "midioutopen"
       sval = "Declare Function midiOutOpen Lib " & Chr(34) & "winmm.dll" & Chr(34) & " (lphMidiOut As Long, ByVal uDeviceID As Long, ByVal dwCallback As Long, ByVal dwInstance As Long, ByVal dwFlags As Long) As Long"
   Case Is = "midioutshortmsg"
       sval = "Declare Function midiOutShortMsg Lib " & Chr(34) & "winmm.dll" & Chr(34) & " (ByVal hMidiOut As Long, ByVal dwMsg As Long) As Long"
   Case Is = "mixerclose"
       sval = "Declare Function mixerClose Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerClose" & Chr(34) & " (ByVal hmx As Long) As Long"
   Case Is = "mixergetcontroldetails"
       sval = "Declare Function mixerGetControlDetails Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerGetControlDetailsA" & Chr(34) & " (ByVal hmxobj As Long, pmxcd As MIXERCONTROLDETAILS, ByVal fdwDetails As Long) As Long"
   Case Is = "mixergetdevcaps"
       sval = "Declare Function mixerGetDevCaps Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerGetDevCapsA" & Chr(34) & " (ByVal uMxId As Long, ByVal pmxcaps As MIXERCAPS, ByVal cbmxcaps As Long) As Long"
   Case Is = "mixergetid"
       sval = "Declare Function mixerGetID Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerGetID" & Chr(34) & " (ByVal hmxobj As Long, pumxID As Long, ByVal fdwId As Long) As Long"
   Case Is = "mixergetlinecontrols"
       sval = "Declare Function mixerGetLineControls Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerGetLineControlsA" & Chr(34) & " (ByVal hmxobj As Long, pmxlc As MIXERLINECONTROLS, ByVal fdwControls As Long) As Long"
   Case Is = "mixergetlineinfo"
       sval = "Declare Function mixerGetLineInfo Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerGetLineInfoA" & Chr(34) & " (ByVal hmxobj As Long, pmxl As MIXERLINE, ByVal fdwInfo As Long) As Long"
   Case Is = "mixergetnumdevs"
       sval = "Declare Function mixerGetNumDevs Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerGetNumDevs" & Chr(34) & " () As Long"
   Case Is = "mixermessage"
       sval = "Declare Function mixerMessage Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerMessage" & Chr(34) & " (ByVal hmx As Long, ByVal uMsg As Long, ByVal dwParam1 As Long, ByVal dwParam2 As Long) As Long"
   Case Is = "mixeropen"
       sval = "Declare Function mixerOpen Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerOpen" & Chr(34) & " (phmx As Long, ByVal uMxId As Long, ByVal dwCallback As Long, ByVal dwInstance As Long, ByVal fdwOpen As Long) As Long"
   Case Is = "mixeropen"
       sval = "Declare Function mixerOpen Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerOpen" & Chr(34) & " (phmx As Long, ByVal uMxId As Long, ByVal dwCallback As Long, ByVal dwInstance As Long, ByVal fdwOpen As Long) As Long"
   Case Is = "mixersetcontroldetails"
       sval = "Declare Function mixerSetControlDetails Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mixerSetControlDetails" & Chr(34) & " (ByVal hmxobj As Long, pmxcd As MIXERCONTROLDETAILS, ByVal fdwDetails As Long) As Long"
   Case Is = "mmioascend"
       sval = "Declare Function mmioAscend Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mmioAscend" & Chr(34) & " (ByVal hmmio As Long, lpck As MMCKINFO, ByVal uFlags As Long) As Long"
   Case Is = "mmioclose"
       sval = "Declare Function mmioClose Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mmioClose" & Chr(34) & " (ByVal hmmio As Long, ByVal uFlags As Long) As Long"
   Case Is = "mmiodescend"
       sval = "Declare Function mmioDescend Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mmioDescend" & Chr(34) & " (ByVal hmmio As Long, lpck As MMCKINFO, lpckParent As MMCKINFO, ByVal uFlags As Long) As Long"
   Case Is = "mmioopen"
       sval = "Declare Function mmioOpen Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mmioOpenA" & Chr(34) & " (ByVal szFileName As String, lpmmioinfo As MMIOINFO, ByVal dwOpenFlags As Long) As Long"
   Case Is = "mmioread"
       sval = "Declare Function mmioRead Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mmioRead" & Chr(34) & " (ByVal hmmio As Long, ByVal pch As String, ByVal cch As Long) As Long"
   Case Is = "mmioseek"
       sval = "Declare Function mmioSeek Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mmioSeek" & Chr(34) & " (ByVal hmmio As Long, ByVal lOffset As Long, ByVal iOrigin As Long) As Long"
   Case Is = "mmiostringtofourcc"
       sval = "Declare Function mmioStringToFOURCC Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "mmioStringToFOURCCA" & Chr(34) & " (ByVal sz As String, ByVal uFlags As Long) As Long"
   Case Is = "modifymenu"
       sval = "Declare Function ModifyMenu Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ModifyMenuA" & Chr(34) & " (ByVal hMenu As Long, ByVal nPosition As Long, ByVal wFlags As Long, ByVal wIDNewItem As Long, ByVal lpString As Any) As Long"
   Case Is = "module32first"
       sval = "Declare Function Module32First Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hSnapshot As Long, uProcess As MODULEENTRY32) As Long"
   Case Is = "module32next"
       sval = "Declare Function Module32Next Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hSnapshot As Long, uProcess As MODULEENTRY32) As Long"
   Case Is = "monitorfrompoint"
       sval = "Declare Function MonitorFromPoint Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal x As Long, ByVal y As Long, ByVal dwFlags As Long) As Long"
   Case Is = "monitorfromrect"
       sval = "Declare Function MonitorFromRect Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByRef lprc As RECT, ByVal dwFlags As Long) As Long"
   Case Is = "monitorfromwindow"
       sval = "Declare Function MonitorFromWindow Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal hwnd As Long, ByVal dwFlags As Long) As Long"
   Case Is = "mouse_event"
       sval = "Declare Sub mouse_event Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "mouse_event" & Chr(34) & " (ByVal dwFlags As Long, ByVal dx As Long, ByVal dy As Long, ByVal cButtons As Long, ByVal dwExtraInfo As Long)"
   Case Is = "movefile"
       sval = "Declare Function MoveFile Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "MoveFileA" & Chr(34) & " (ByVal lpExistingFileName As String, ByVal lpNewFileName As String) As Long"
   Case Is = "movefileex"
       sval = "Declare Function MoveFileEx Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "MoveFileExA" & Chr(34) & " (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal dwFlags As Long) As Long"
   Case Is = "movetoex"
       sval = "Declare Function MoveToEx Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "MoveToEx" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, lpPoint As POINTAPI) As Long"
   Case Is = "movewindow"
       sval = "Declare Function MoveWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "MoveWindow" & Chr(34) & " (ByVal hwnd As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal bRepaint As Long) As Long"
   Case Is = "muldiv"
       sval = "Declare Function MulDiv Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "MulDiv" & Chr(34) & " (ByVal nNumber As Long, ByVal nNumerator As Long, ByVal nDenominator As Long) As Long"
   Case Is = "netapibufferfree"
       sval = "Declare Function NetApiBufferFree Lib " & Chr(34) & "netapi32" & Chr(34) & " (ByVal Buffer As Long) As Long"
   Case Is = "netbios"
       sval = "Declare Function Netbios Lib " & Chr(34) & "netapi32.dll" & Chr(34) & " Alias " & Chr(34) & "Netbios" & Chr(34) & " (pncb As NCB) As Byte"
   Case Is = "netmessagebuffersend"
       sval = "Declare Function NetMessageBufferSend Lib   " & Chr(34) & "NETAPI32.DLL" & Chr(34) & " (yServer As Any, yToName As Byte,   yFromName As Any, yMsg As Byte, ByVal lSize As Long) As Long"
   Case Is = "netshareadd"
       sval = "Public Declare Function NetShareAdd Lib " & Chr(34) & "netapi32.dll" & Chr(34) & " (ByVal servername As Any, ByVal slevel As Long, buf As SHARE_INFO_502, ByVal cbbuf As Long) As Long"
   Case Is = "netsharedel"
       sval = "Declare Function NetShareDel Lib " & Chr(34) & "netapi32.dll" & Chr(34) & " (ByVal servername As Any, ByVal netname As String, ByVal reserved As Long) As Long"
   Case Is = "netsharegetinfo"
       sval = "Declare Function NetShareGetInfo Lib " & Chr(34) & "Netapi32.dll" & Chr(34) & " (strServerName As Any, strNetName As Any, ByVal nLevel As Long, pBuffer As Long) As Long"
   Case Is = "netusergetinfo"
       sval = "Declare Function NetUserGetInfo Lib " & Chr(34) & "netapi32" & Chr(34) & " (ByVal servername As String, ByVal username As String, ByVal level As Long, bufptr As Long) As Long"
   Case Is = "netwkstagetinfo"
       sval = "Function NetWkstaGetInfo Lib " & Chr(34) & "netapi32" & Chr(34) & " (ByVal servername As String, ByVal level As Long, lpBuf As Any) As Long"
   Case Is = "ntohs"
       sval = "Declare Function ntohs Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal netshort As Long) As Integer"
   Case Is = "offsetcliprgn"
       sval = "Declare Function OffsetClipRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "OffsetClipRgn" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "offsetrect"
       sval = "Declare Function OffsetRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "OffsetRect" & Chr(34) & " (lpRect As RECT, ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "offsetrgn"
       sval = "Declare Function OffsetRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "OffsetRgn" & Chr(34) & " (ByVal hRgn As Long, ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "oleloadpicturepath"
       sval = "Declare Function OleLoadPicturePath Lib " & Chr(34) & "oleaut32.dll" & Chr(34) & " (ByVal szURLorPath As Long, ByVal punkCaller As Long, ByVal dwReserved As Long, ByVal clrReserved As OLE_COLOR, ByRef riid As TGUID, ByRef ppvRet As IPicture) As Long"
   Case Is = "oletranslatecolor"
       sval = "Private Declare Function OleTranslateColor Lib " & Chr(34) & "olepro32.dll" & Chr(34) & " (ByVal OLE_COLOR As Long, ByVal hPalette As Long, pccolorref As Long) As Long"
   Case Is = "openclipboard"
       sval = "Declare Function OpenClipboard Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "OpenClipboard" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "openeventlog"
       sval = "Declare Function OpenEventLog Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "OpenEventLogA" & Chr(34) & " (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As Long"
   Case Is = "openfile"
       sval = "Declare Function OpenFile Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "OpenFile" & Chr(34) & " (ByVal lpFileName As String, lpReOpenBuff As OFSTRUCT, ByVal wStyle As Long) As Long"
   Case Is = "openicon"
       sval = "Declare Function OpenIcon Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "openprinter"
       sval = "Declare Function OpenPrinter Lib " & Chr(34) & "winspool.drv" & Chr(34) & " Alias " & Chr(34) & "OpenPrinterA" & Chr(34) & " (ByVal pPrinterName As String, phPrinter As Long, pDefault As Any) As Long"
   Case Is = "openprocess"
       sval = "Declare Function OpenProcess Lib " & Chr(34) & "Kernel32.dll" & Chr(34) & " (ByVal dwDesiredAccessas As Long, ByVal bInheritHandle As Long, ByVal dwProcId As Long) As Long"
   Case Is = "openprocesstoken"
       sval = "Declare Function OpenProcessToken Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "OpenProcessToken" & Chr(34) & " (ByVal ProcessHandle As Long, ByVal DesiredAccess As Long, TokenHandle As Long) As Long"
   Case Is = "openscmanager"
       sval = "Declare Function OpenSCManager Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "OpenSCManagerA" & Chr(34) & " (ByVal lpMachineName As String, ByVal lpDatabaseName As String, ByVal dwDesiredAccess As Long) As Long"
    Case Is = "openthreadtoken"
       sval = "Declare Function OpenThreadToken Lib " & Chr(34) & "Advapi32" & Chr(34) & " (ByVal ThreadHandle As Long, ByVal DesiredAccess As Long, ByVal OpenAsSelf As Long, TokenHandle As Long) As Long"
   Case Is = "openthreadtoken"
       sval = "Declare Function OpenThreadToken Lib " & Chr(34) & "Advapi32" & Chr(34) & " (ByVal ThreadHandle As Long, ByVal DesiredAccess As Long, ByVal OpenAsSelf As Long, TokenHandle As Long) As Long"
   Case Is = "outputdebugstring"
       sval = "Declare Sub OutputDebugString Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "OutputDebugStringA" & Chr(34) & " (ByVal lpOutputString As String)"
   Case Else
       sval = ""
  End Select
  
  returnApiP = sval
         
End Function

'---------------------------------------------------------------------------------
' list of all the api's from letters p-z
'---------------------------------------------------------------------------------
Private Function returnApiZ(strApi As String) As String
  
  Dim sval As String
  
  Select Case strApi
   Case Is = "pagesetupdlg"
       sval = "Declare Function PageSetupDlg Lib " & Chr(34) & "comdlg32.dll" & Chr(34) & " Alias " & Chr(34) & "PageSetupDlgA" & Chr(34) & " (pPagesetupdlg As PAGESETUPDLG) As Long"
   Case Is = "paintdesktop"
       sval = "Declare Function PaintDesktop Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "PaintDesktop" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "patblt"
       sval = "Declare Function PatBlt Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PatBlt" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal dwRop As Long) As Long"
   Case Is = "patblt"
       sval = "Declare Function PatBlt Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PatBlt" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal dwRop As Long) As Long"
   Case Is = "pathaddextension"
       sval = "Declare Function PathAddExtension Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathAddExtensionA" & Chr(34) & " (ByVal pszPath As String, ByVal pszExt As String) As Long"
   Case Is = "pathbuildroot"
       sval = "Declare Function PathBuildRoot Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathBuildRootA" & Chr(34) & " (ByVal szRoot As String, ByVal iDrive As Long) As Long"
   Case Is = "pathcombine"
       sval = "Declare Function PathCombine Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathCombineA" & Chr(34) & " (ByVal szDest As String, ByVal lpszDir As String, ByVal lpszFile As String) As Long"
   Case Is = "pathcommonprefix"
       sval = "Declare Function PathCommonPrefix Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathCommonPrefixA" & Chr(34) & " (ByVal pszFile1 As String, ByVal pszFile2 As String, ByVal achPath As String) As Long"
   Case Is = "pathcompactpath"
       sval = "Declare Function PathCompactPath Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathCompactPathA" & Chr(34) & " (ByVal hDC As Long, ByVal pszPath As String, ByVal dx As Long) As Long"
   Case Is = "pathcompactpathex"
       sval = "Declare Function PathCompactPathEx Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathCompactPathExA" & Chr(34) & " (ByVal pszOut As String, ByVal pszSrc As String, ByVal cchMax As Long, ByVal dwFlags As Long) As Long"
   Case Is = "pathcreatefromurl"
       sval = "Private Declare Sub PathCreateFromUrl Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathCreateFromUrlA" & Chr(34) & " (ByVal pszUrl As String, ByVal pszPath As String, ByRef pcchPath As Long, ByVal dwFlags As Long)"
   Case Is = "pathfindonpath"
       sval = "Declare Function PathFindOnPath Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathFindOnPathA" & Chr(34) & " (ByVal pszPath As String, ByVal ppszOtherDirs As String) As Boolean"
   Case Is = "pathgetchartype"
       sval = "Declare Function PathGetCharType Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathGetCharTypeA" & Chr(34) & " (ByVal ch As Byte) As Long"
   Case Is = "pathisdirectory"
       sval = "Declare Function PathIsDirectory Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsDirectoryA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathisdirectoryempty"
       sval = "Declare Function PathIsDirectoryEmpty Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsDirectoryEmptyA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathislfnfilespec"
       sval = "Declare Function PathIsLFNFileSpec Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsLFNFileSpecA" & Chr(34) & " (ByVal lpName As String) As Long"
   Case Is = "pathisnetworkpath"
       sval = "Declare Function PathIsNetworkPath Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsNetworkPathA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathisrelative"
       sval = "Declare Function PathIsRelative Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsRelativeA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathisroot"
       sval = "Declare Function PathIsRoot Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsRootA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathissameroot"
       sval = "Declare Function PathIsSameRoot Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsSameRootA" & Chr(34) & " (ByVal pszPath1 As String, ByVal pszPath2 As String) As Long"
   Case Is = "pathissystemfolder"
       sval = "Declare Function PathIsSystemFolder Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsSystemFolderA" & Chr(34) & " (ByVal pszPath As String, ByVal dwAttrb As Long) As Long"
   Case Is = "pathisunc"
       sval = "Declare Function PathIsUNC Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsUNCA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathisuncserver"
       sval = "Declare Function PathIsUNCServer Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsUNCServerA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathisuncservershare"
       sval = "Declare Function PathIsUNCServerShare Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsUNCServerShareA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathisurl"
       sval = "Declare Function PathIsURL Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathIsURLA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathmakepretty"
       sval = "Declare Function PathMakePretty Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathMakePrettyA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathmakesystemfolder"
       sval = "Declare Function PathMakeSystemFolder Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathMakeSystemFolderA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathmatchspec"
       sval = "Declare Function PathMatchSpec Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathMatchSpecA" & Chr(34) & " (ByVal pszFile As String, ByVal pszSpec As String) As Long"
   Case Is = "pathquotespaces"
       sval = "Declare Sub PathQuoteSpaces Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathQuoteSpacesA" & Chr(34) & " (ByVal lpsz As String)"
   Case Is = "pathstrippath"
       sval = "Declare Sub PathStripPath Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathStripPathA" & Chr(34) & " (ByVal pszPath As String)"
   Case Is = "pathstriptoroot"
       sval = "Declare Function PathStripToRoot Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathStripToRootA" & Chr(34) & " (ByVal pszPath As String) As Long"
   Case Is = "pathtoregion"
       sval = "Declare Function PathToRegion Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PathToRegion" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "pathunquotespaces"
       sval = "Declare Sub PathUnquoteSpaces Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " Alias " & Chr(34) & "PathUnquoteSpacesA" & Chr(34) & " (ByVal lpsz As String)"
   Case Is = "peekmessage"
       sval = "Declare Function PeekMessage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "PeekMessageA" & Chr(34) & " (lpMsg As MSG, ByVal hwnd As Long, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long, ByVal wRemoveMsg As Long) As Long"
   Case Is = "pie"
       sval = "Declare Function Pie Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "Pie" & Chr(34) & " (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long, ByVal X3 As Long, ByVal Y3 As Long, ByVal X4 As Long, ByVal Y4 As Long) As Long"
   Case Is = "playsound"
       sval = "Declare Function PlaySound Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "PlaySoundA" & Chr(34) & " (ByVal lpszName As String, ByVal hModule As Long, ByVal dwFlags As Long) As Long"
   Case Is = "playsound"
       sval = "Declare Function PlaySound Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "PlaySoundA" & Chr(34) & " (ByVal lpszName As String, ByVal hModule As Long, ByVal dwFlags As Long) As Long"
   Case Is = "polybezier"
       sval = "Declare Function PolyBezier Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PolyBezier" & Chr(34) & " (ByVal hdc As Long, lppt As POINTAPI, ByVal cPoints As Long) As Long"
   Case Is = "polybezierto"
       sval = "Declare Function PolyBezierTo Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PolyBezierTo" & Chr(34) & " (ByVal hdc As Long, lppt As POINTAPI, ByVal cCount As Long) As Long"
   Case Is = "polybezierto"
       sval = "Declare Function PolyBezierTo Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PolyBezierTo" & Chr(34) & " (ByVal hdc As Long, lppt As POINTAPI, ByVal cCount As Long) As Long"
   Case Is = "polydraw"
       sval = "Declare Function PolyDraw Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PolyDraw" & Chr(34) & " (ByVal hdc As Long, lppt As POINTAPI, lpbTypes As Byte, ByVal cCount As Long) As Long"
   Case Is = "polygon"
       sval = "Declare Function Polygon Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "Polygon" & Chr(34) & " (ByVal hdc As Long, lpPoint As POINTAPI, ByVal nCount As Long) As Long"
   Case Is = "polyline"
       sval = "Declare Function Polyline Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "Polyline" & Chr(34) & " (ByVal hdc As Long, lpPoint As POINTAPI, ByVal nCount As Long) As Long"
   Case Is = "polylineto"
       sval = "Declare Function PolylineTo Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PolylineTo" & Chr(34) & " (ByVal hdc As Long, lppt As POINTAPI, ByVal cCount As Long) As Long"
   Case Is = "polypolygon"
       sval = "Declare Function PolyPolygon Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PolyPolygon" & Chr(34) & " (ByVal hdc As Long, lpPoint As POINTAPI, lpPolyCounts As Long, ByVal nCount As Long) As Long"
   Case Is = "polypolyline"
       sval = "Declare Function PolyPolyline Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PolyPolyline" & Chr(34) & " (ByVal hdc As Long, lppt As POINTAPI, lpdwPolyPoints As Long, ByVal cCount As Long) As Long"
   Case Is = "polytextout"
       sval = "Declare Function PolyTextOut Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PolyTextOutA" & Chr(34) & " (ByVal hdc As Long, pptxt As POLYTEXT, cStrings As Long) As Long"
   Case Is = "postmessage"
       sval = "Declare Function PostMessage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "PostMessageA" & Chr(34) & " (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long"
   Case Is = "postquitmessage"
       sval = "Declare Sub PostQuitMessage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "PostQuitMessage" & Chr(34) & " (ByVal nExitCode As Long)"
   Case Is = "preparetape"
       sval = "Declare Function PrepareTape Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "PrepareTape" & Chr(34) & " (ByVal hDevice As Long, ByVal dwOperation As Long, ByVal bimmediate As Long) As Long"
   Case Is = "printdialog"
       sval = "Declare Function PrintDialog Lib " & Chr(34) & "comdlg32.dll" & Chr(34) & " Alias " & Chr(34) & "PrintDlgA" & Chr(34) & " (pPrintdlg As PRINTDLG_TYPE) As Long"
   Case Is = "printerproperties"
       sval = "Declare Function PrinterProperties Lib " & Chr(34) & "winspool.drv" & Chr(34) & " (ByVal hwnd As Long, ByVal hPrinter As Long) As Long"
   Case Is = "printwindow"
       sval = "Declare Function PrintWindow Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hWnd As Long, ByVal hdcBlt As Long, ByVal nFlags As Long) As Long"
   Case Is = "process32first"
       sval = "Declare Function Process32First Lib " & Chr(34) & "Kernel32" & Chr(34) & " (ByVal hSnapShot As Long, uProcess As PROCESSENTRY32) As Long"
   Case Is = "process32next"
       sval = "Declare Function Process32Next Lib " & Chr(34) & "Kernel32" & Chr(34) & " (ByVal hSnapShot As Long, uProcess As PROCESSENTRY32) As Long"
   Case Is = "ptinrect"
       sval = "Declare Function PtInRect Lib " & Chr(34) & "user32" & Chr(34) & " (lpRect As RECT, ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "ptinregion"
       sval = "Declare Function PtInRegion Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "PtInRegion" & Chr(34) & " (ByVal hRgn As Long, ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "putfocus"
       sval = "Declare Function Putfocus Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetFocus" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "pwdchangepassword"
       sval = "Declare Function PwdChangePassword Lib " & Chr(34) & "mpr" & Chr(34) & " Alias " & Chr(34) & "PwdChangePasswordA" & Chr(34) & " (ByVal lpcRegkeyname As String, ByVal hwnd As Long, ByVal uiReserved1 As Long, ByVal uiReserved2 As Long) As Long"
   Case Is = "queryperformancecounter"
       sval = "Declare Function QueryPerformanceCounter Lib " & Chr(34) & "kernel32" & Chr(34) & " (lpPerformanceCount As LARGE_INTEGER) As Long"
   Case Is = "queryperformancefrequency"
       sval = "Declare Function QueryPerformanceFrequency Lib " & Chr(34) & "kernel32" & Chr(34) & " (lpFrequency As LARGE_INTEGER) As Long"
   Case Is = "raiseexception"
       sval = "Declare Sub RaiseException Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal dwExceptionCode As Long, ByVal dwExceptionFlags As Long, ByVal nNumberOfArguments As Long, lpArguments As Long)"
   Case Is = "rasdial"
       sval = "Declare Function RasDial Lib " & Chr(34) & "rasapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RasDialA" & Chr(34) & " (ByVal lprasdialextensions As Long, ByVal lpcstr As String, ByRef lprasdialparamsa As RASDIALPARAMS, ByVal dword As Long, lpvoid As Any, ByRef lphrasconn As Long) As Long"
   Case Is = "rasenumconnections"
       sval = "Declare Function RasEnumConnections Lib " & Chr(34) & "rasapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RasEnumConnectionsA" & Chr(34) & " (lpRasConn As Any, lpcb As Long, lpcConnections As Long) As Long"
   Case Is = "rasenumentries"
       sval = "Declare Function RasEnumEntries Lib " & Chr(34) & "RasApi32.DLL" & Chr(34) & " Alias " & Chr(34) & "RasEnumEntriesA" & Chr(34) & " (ByVal reserved As String, ByVal lpszPhonebook As String, lprasentryname As Any, lpcb As Long, lpcEntries As Long) As Long"
   Case Is = "rasgetconnectionstatistics"
       sval = "Declare Function RasGetConnectionStatistics Lib " & Chr(34) & "rasapi32" & Chr(34) & " (ByVal hRasConn As Long, ByVal lpStatistics As Long) As Long"
   Case Is = "rasgetentrydialparams"
       sval = "Declare Function RasGetEntryDialParams Lib " & Chr(34) & "rasapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RasGetEntryDialParamsA" & Chr(34) & " (ByVal lpcstr As String, ByRef lprasdialparamsa As RASDIALPARAMS, ByRef lpbool As Long) As Long"
   Case Is = "rasgeterrorstring"
       sval = "Declare Function RasGetErrorString Lib " & Chr(34) & "rasapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RasGetErrorStringA" & Chr(34) & " (ByVal uErrorValue As Long, ByVal lpszErrorString As String, ByVal cBufSize As Long) As Long"
   Case Is = "rashangup"
       sval = "Declare Function RasHangUp Lib " & Chr(34) & "rasapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RasHangUpA" & Chr(34) & " (ByVal hRasConn As Long) As Long"
   Case Is = "readconsole"
       sval = "Declare Function ReadConsole Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "ReadConsoleA" & Chr(34) & " (ByVal hConsoleInput As Long, ByVal lpBuffer As String, ByVal nNumberOfCharsToRead As Long, lpNumberOfCharsRead As Long, lpReserved As Any) As Long"
   Case Is = "readfile"
       sval = "Declare Function ReadFile Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "ReadFile" & Chr(34) & " (ByVal hFile As Long, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, lpNumberOfBytesRead As Long, lpOverlapped As OVERLAPPED) As Long"
   Case Is = "realizepalette"
       sval = "Declare Function RealizePalette Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "RealizePalette" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "rectangle"
       sval = "Declare Function Rectangle Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "Rectangle" & Chr(34) & " (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long"
   Case Is = "recv"
       sval = "Declare Function recv Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal s As Long, buf As Any, ByVal buflen As Long, ByVal flags As Long) As Long"
   Case Is = "redrawwindow"
       sval = "Declare Function RedrawWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "RedrawWindow" & Chr(34) & " (ByVal hwnd As Long, lprcUpdate As RECT, ByVal hrgnUpdate As Long, ByVal fuRedraw As Long) As Long"
   Case Is = "regclosekey"
       sval = "Declare Function RegCloseKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegCloseKey" & Chr(34) & " (ByVal hKey As Long) As Long"
   Case Is = "regcreatekeyex"
       sval = "Declare Function RegCreateKeyEx Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegCreateKeyExA" & Chr(34) & " (ByVal hKey As Long, ByVal lpSubKey As String, ByVal Reserved As Long, ByVal lpClass As String, ByVal dwOptions As Long, ByVal samDesired As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES, phkResult As Long, lpdwDisposition As Long) As Long"
   Case Is = "regdeletekey"
       sval = "Declare Function RegDeleteKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegDeleteKeyA" & Chr(34) & " (ByVal hKey As Long, ByVal lpSubKey As String) As Long"
   Case Is = "regdeletevalue"
       sval = "Declare Function RegDeleteValue Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegDeleteValueA" & Chr(34) & " (ByVal hKey As Long, ByVal lpValueName As String) As Long"
   Case Is = "regenumkeyex"
       sval = "Declare Function RegEnumKeyEx Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegEnumKeyExA" & Chr(34) & " (ByVal hKey As Long, ByVal dwIndex As Long, ByVal lpName As String, lpcbName As Long, lpReserved As Long, ByVal lpClass As String, lpcbClass As Long, lpftLastWriteTime As FILETIME) As Long"
   Case Is = "regenumvalue"
       sval = "Declare Function RegEnumValue Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegEnumValueA" & Chr(34) & " (ByVal hKey As Long, ByVal dwIndex As Long, ByVal lpValueName As String, lpcbValueName As Long, ByVal lpReserved As Long, lpType As Long, lpData As Byte, lpcbData As Long) As Long"
   Case Is = "registerclass"
       sval = "Declare Function RegisterClass Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "RegisterClass" & Chr(34) & " (Class As WNDCLASS) As Long"
   Case Is = "registerhotkey"
       sval = "Declare Function RegisterHotKey Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "RegisterHotKey" & Chr(34) & " (ByVal hwnd As Long, ByVal id As Long, ByVal fsModifiers As Long, ByVal vk As Long) As Long"
   Case Is = "registerhotkey"
       sval = "Declare Function RegisterHotKey Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "RegisterHotKey" & Chr(34) & " (ByVal hwnd As Long, ByVal id As Long, ByVal fsModifiers As Long, ByVal vk As Long) As Long"
   Case Is = "registerserviceprocess"
       sval = "Declare Function RegisterServiceProcess Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal dwProcessID As Long, ByVal dwType As Long) As Long"
   Case Is = "regnotifychangekeyvalue"
       sval = "Declare Function RegNotifyChangeKeyValue Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegNotifyChangeKeyValue" & Chr(34) & " (ByVal hKey As Long, ByVal bWatchSubtree As Long, ByVal dwNotifyFilter As Long, ByVal hEvent As Long, ByVal fAsynchronus As Long) As Long"
   Case Is = "regopenkey"
       sval = "Declare Function RegOpenKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegOpenKeyA" & Chr(34) & " (ByVal hKey As Long, ByVal lpSubKey As String, phkResult As Long) As Long"
   Case Is = "regopenkeyex"
       sval = "Declare Function RegOpenKeyEx Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegOpenKeyExA" & Chr(34) & " (ByVal hKey As Long, ByVal lpSubKey As String, ByVal ulOptions As Long, ByVal samDesired As Long, phkResult As Long) As Long"
   Case Is = "regqueryvalueex"
       sval = "Declare Function RegQueryValueEx Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegQueryValueExA" & Chr(34) & " (ByVal hKey As Long, ByVal lpValueName As String, ByVal lpReserved As Long, lpType As Long, lpData As Any, lpcbData As Long) As Long         ' Note that if you declare the lpData parameter as String, you must pass it By Value. "
   Case Is = "regrestorekey"
       sval = "Declare Function RegRestoreKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegRestoreKeyA" & Chr(34) & " (ByVal hKey As Long, ByVal lpFile As String, ByVal dwFlags As Long) As Long"
   Case Is = "regsavekey"
       sval = "Declare Function RegSaveKey Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegSaveKeyA" & Chr(34) & " (ByVal hKey As Long, ByVal lpFile As String, lpSecurityAttributes As Any) As Long"
   Case Is = "regsetvalueex"
       sval = "Declare Function RegSetValueEx Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "RegSetValueExA" & Chr(34) & " (ByVal hKey As Long, ByVal lpValueName As String, ByVal Reserved As Long, ByVal dwType As Long, lpData As Any, ByVal cbData As Long) As Long         ' Note that if you declare the lpData parameter as String, you must pass it By Value."
   Case Is = "releasecapture"
       sval = "Declare Function ReleaseCapture Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ReleaseCapture" & Chr(34) & " () As Long"
   Case Is = "releasedc"
       sval = "Declare Function ReleaseDC Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ReleaseDC" & Chr(34) & " (ByVal hwnd As Long, ByVal hdc As Long) As Long"
   Case Is = "releasemutex"
       sval = "Declare Function ReleaseMutex Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hMutex As Long) As Long"
   Case Is = "removedirectory"
       sval = "Declare Function RemoveDirectory Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "RemoveDirectoryA" & Chr(34) & " (ByVal lpPathName As String) As Long"
   Case Is = "removemenu"
       sval = "Declare Function RemoveMenu Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "RemoveMenu" & Chr(34) & " (ByVal hMenu As Long, ByVal nPosition As Long, ByVal wFlags As Long) As Long"
   Case Is = "removeprop"
       sval = "Declare Function RemoveProp Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "RemovePropA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpString As String) As Long"
   Case Is = "reportevent"
       sval = "Declare Function ReportEvent Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "ReportEventA" & Chr(34) & " (ByVal hEventLog As Long, ByVal wType As Long, ByVal wCategory As Long, ByVal dwEventID As Long, lpUserSid As Any, ByVal wNumStrings As Long, ByVal dwDataSize As Long, lpStrings As String, lpRawData As Any) As Long"
   Case Is = "reportfault"
       sval = "Declare Function ReportFault Lib " & Chr(34) & "Faultrep" & Chr(34) & " (pep As EXCEPTION_POINTERS, ByVal dwMode As Long) As EFaultRepRetVal"
   Case Is = "findnextchangenotification"
       sval = "Declare Function FindNextChangeNotification Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hChangeHandle As Long) As Long"
   Case Is = "roundrect"
       sval = "Declare Function RoundRect Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "RoundRect" & Chr(34) & " (ByVal hdc As Long, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long, ByVal X3 As Long, ByVal Y3 As Long) As Long"
   Case Is = "rpcstringfree"
       sval = "Declare Function RpcStringFree Lib " & Chr(34) & "rpcrt4" & Chr(34) & " Alias " & Chr(34) & "RpcStringFreeA" & Chr(34) & " (lpUUIDString As Long) As Long"
   Case Is = "screentoclient"
       sval = "Declare Function ScreenToClient Lib " & Chr(34) & "user32" & Chr(34) & "(ByVal hwnd As Integer, ByRef lpPoint As POINTAPI) As long"
   Case Is = "scrolldc"
       sval = "Declare Function ScrollDC Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hdc As Long, ByVal dx As Long, ByVal dy As Long, lprcScroll As RECT, lprcClip As RECT, ByVal hrgnUpdate As Long, lprcUpdate As RECT) As Long"
   Case Is = "searchtreeforfile"
       sval = "Declare Function SearchTreeForFile Lib " & Chr(34) & "imagehlp" & Chr(34) & " (ByVal RootPath As String, ByVal InputPathName As String, ByVal OutputPathBuffer As String) As Long"
   Case Is = "selectcliprgn"
       sval = "Declare Function SelectClipRgn Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SelectClipRgn" & Chr(34) & " (ByVal hdc As Long, ByVal hRgn As Long) As Long"
   Case Is = "selectobject"
       sval = "Declare Function SelectObject Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SelectObject" & Chr(34) & " (ByVal hdc As Long, ByVal hObject As Long) As Long"
   Case Is = "selectpalette"
       sval = "Declare Function SelectPalette Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SelectPalette" & Chr(34) & " (ByVal hdc As Long, ByVal hPalette As Long, ByVal bForceBackground As Long) As Long"
   Case Is = "send"
       sval = "Declare Function Send Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " Alias " & Chr(34) & "send" & Chr(34) & " (ByVal s As Long, buf As Any, ByVal buflen As Long, ByVal flags As Long) As Long"
   Case Is = "sendinput"
       sval = "Declare Function SendInput Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal nInputs As Long, pInputs As GENERALINPUT, ByVal cbSize As Long) As Long"
   Case Is = "sendmessage"
       sval = "Declare Function SendMessage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SendMessageA" & Chr(34) & " (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Any) As Long"
   Case Is = "sendmessagetimeout"
       sval = "Declare Function SendMessageTimeout Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SendMessageTimeoutA" & Chr(34) & " (ByVal hwnd As Long, ByVal msg As Long, ByVal wParam As Long, ByVal lParam As String, ByVal fuFlags As Long, ByVal uTimeout As Long, lpdwResult As Long) As Long"
   Case Is = "setactivewindow"
       sval = "Declare Function SetActiveWindow Lib " & Chr(34) & "user32.dll" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "setarcdirection"
       sval = "Declare Function SetArcDirection Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SetArcDirection" & Chr(34) & " (ByVal hdc As Long, ByVal ArcDirection As Long) As Long"
   Case Is = "setbitmapbits"
       sval = "Declare Function SetBitmapBits Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SetBitmapBits" & Chr(34) & " (ByVal hBitmap As Long, ByVal dwCount As Long, lpBits As Any) As Long"
   Case Is = "setbkmode"
       sval = "Declare Function SetBkMode Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SetBkMode" & Chr(34) & " (ByVal hdc As Long, ByVal nBkMode As Long) As Long"
   Case Is = "setcapture"
       sval = "Declare Function SetCapture Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetCapture" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "setcaretblinktime"
       sval = "Declare Function SetCaretBlinkTime Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetCaretBlinkTime" & Chr(34) & " (ByVal wMSeconds As Long) As Long"
   Case Is = "setclassword"
       sval = "Declare Function SetClassWord Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetClassWord" & Chr(34) & " (ByVal hwnd As Long, ByVal nIndex As Long, ByVal wNewWord As Long) As Long"
   Case Is = "setclipboarddata"
       sval = "Declare Function SetClipboardData Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetClipboardDataA" & Chr(34) & " (ByVal wFormat As Long, ByVal hMem As Long) As Long"
   Case Is = "setclipboardviewer"
       sval = "Declare Function SetClipboardViewer Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetClipboardViewer" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "setcoloradjustment"
       sval = "Declare Function SetColorAdjustment Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SetColorAdjustment" & Chr(34) & " (ByVal hdc As Long, lpca As COLORADJUSTMENT) As Long"
   Case Is = "setcomputername"
       sval = "Declare Function SetComputerName Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetComputerNameA" & Chr(34) & " (ByVal lpComputerName As String) As Long"
   Case Is = "setconsoletextattribute"
       sval = "Declare Function SetConsoleTextAttribute Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hConsoleOutput As Long, ByVal wAttributes As Long) As Long"
   Case Is = "setconsoletitle"
       sval = "Declare Function SetConsoleTitle Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetConsoleTitleA" & Chr(34) & " (ByVal lpConsoleTitle As String) As Long"
   Case Is = "setcurrentdirectory"
       sval = "Declare Function SetCurrentDirectory Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetCurrentDirectoryA" & Chr(34) & " (ByVal lpPathName As String) As Long"
   Case Is = "setcursor"
       sval = "Declare Function SetCursor Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetCursor" & Chr(34) & " (ByVal hCursor As Long) As Long"
   Case Is = "setcursorpos"
       sval = "Declare Function SetCursorPos Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetCursorPos" & Chr(34) & " (ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "setcursorpos"
       sval = "Declare Function SetCursorPos Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetCursorPos" & Chr(34) & " (ByVal x As Long, ByVal y As Long) As Long"
   Case Is = "setdevicegammaramp"
       sval = "Declare Function SetDeviceGammaRamp Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long, lpv As Any) As Long"
   Case Is = "setdibitstodevice"
       sval = "Declare Function SetDIBitsToDevice Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal dx As Long, ByVal dy As Long, ByVal SrcX As Long, ByVal SrcY As Long, ByVal Scan As Long, ByVal NumScans As Long, Bits As Any, BitsInfo As BITMAPINFO, ByVal wUsage As Long) As Long"
   Case Is = "setdoubleclicktime"
       sval = "Declare Function SetDoubleClickTime Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetDoubleClickTime" & Chr(34) & " (ByVal wCount As Long) As Long"
   Case Is = "setenvironmentvariable"
       sval = "Declare Function SetEnvironmentVariable Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetEnvironmentVariableA" & Chr(34) & " (ByVal lpName As String, ByVal lpValue As String) As Long"
   Case Is = "setfileattributes"
       sval = "Declare Function SetFileAttributes Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetFileAttributesA" & Chr(34) & " (ByVal lpFileName As String, ByVal dwFileAttributes As Long) As Long"
   Case Is = "setfilepointer"
       sval = "Declare Function SetFilePointer Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetFilePointer" & Chr(34) & " (ByVal hFile As Long, ByVal lDistanceToMove As Long, lpDistanceToMoveHigh As Long, ByVal dwMoveMethod As Long) As Long"
   Case Is = "setfilesecurity"
       sval = "Declare Function SetFileSecurity Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " Alias " & Chr(34) & "SetFileSecurityA" & Chr(34) & " (ByVal lpFileName As String, ByVal SecurityInformation As Long, pSecurityDescriptor As SECURITY_DESCRIPTOR) As Long"
   Case Is = "setfiletime"
       sval = "Declare Function SetFileTime Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetFileTime" & Chr(34) & " (ByVal hFile As Long, lpCreationTime As FILETIME, lpLastAccessTime As FILETIME, lpLastWriteTime As FILETIME) As Long"
   Case Is = "setfocus"
       sval = "Declare Function SetFocus Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetFocus" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "setforegroundwindow"
       sval = "Declare Function SetForegroundWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetForegroundWindow" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "setkeyboardstate"
       sval = "Declare Function SetKeyboardState Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetKeyboardState" & Chr(34) & " (lppbKeyState As Byte) As Long"
   Case Is = "setlasterror"
       sval = "Declare Sub SetLastError Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetLastError" & Chr(34) & " (ByVal dwErrCode As Long)"
   Case Is = "setlasterrorex"
       sval = "Declare Sub SetLastErrorEx Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal dwErrCode As Long, ByVal dwType As Long)"
   Case Is = "setlayeredwindowattributes"
       sval = "Declare Function SetLayeredWindowAttributes Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hWnd As Long, ByVal crKey As Long, ByVal bAlpha As Byte, ByVal dwFlags As Long) As Long"
   Case Is = "setlayout"
       sval = "Declare Function SetLayout Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long, ByVal dwLayout As Long) As Long"
   Case Is = "setmapmode"
       sval = "Declare Function SetMapMode Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SetMapMode" & Chr(34) & " (ByVal hdc As Long, ByVal nMapMode As Long) As Long"
   Case Is = "setmenuitembitmaps"
       sval = "Declare Function SetMenuItemBitmaps Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetMenuItemBitmaps" & Chr(34) & " (ByVal hMenu As Long, ByVal nPosition As Long, ByVal wFlags As Long, ByVal hBitmapUnchecked As Long, ByVal hBitmapChecked As Long) As Long"
   Case Is = "setmenuiteminfo"
       sval = "Declare Function SetMenuItemInfo Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetMenuItemInfoA" & Chr(34) & " (ByVal hMenu As Long, ByVal uItem As Long, ByVal fByPosition As Long, lpmii As MENUITEMINFO) As Long"
   Case Is = "setparent"
       sval = "Declare Function SetParent Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetParent" & Chr(34) & " (ByVal hWndChild As Long, ByVal hWndNewParent As Long) As Long"
   Case Is = "setpixel"
       sval = "Declare Function SetPixel Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SetPixel" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal crColor As Long) As Long"
   Case Is = "setpixelv"
       sval = "Declare Function SetPixelV Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SetPixelV" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal crColor As Long) As Long"
   Case Is = "setpolyfillmode"
       sval = "Declare Function SetPolyFillMode Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long, ByVal nPolyFillMode As Long) As Long"
   Case Is = "setpriorityclass"
       sval = "Declare Function SetPriorityClass Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetPriorityClass" & Chr(34) & " (ByVal hProcess As Long, ByVal dwPriorityClass As Long) As Long"
   Case Is = "setprop"
       sval = "Declare Function SetProp Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetPropA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpString As String, ByVal hData As Long) As Long"
   Case Is = "setrect"
       sval = "Declare Function SetRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetRect" & Chr(34) & " (lpRect As RECT, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long"
   Case Is = "setrectempty"
       sval = "Declare Function SetRectEmpty Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetRectEmpty" & Chr(34) & " (lpRect As RECT) As Long"
   Case Is = "setrop2"
       sval = "Declare Function SetROP2 Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long, ByVal nDrawMode As Long) As Long"
   Case Is = "setsecuritydescriptordacl"
       sval = "Declare Function SetSecurityDescriptorDacl Lib " & Chr(34) & "advapi32.dll" & Chr(34) & " (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal bDaclPresent As Long, pDacl As Byte, ByVal bDaclDefaulted As Long) As Long"
   Case Is = "setsockopt"
       sval = "Declare Function setsockopt Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal s As Long, ByVal Level As Long, ByVal optname As Long, optval As Any, ByVal optlen As Long) As Long"
   Case Is = "setstretchbltmode"
       sval = "Declare Function SetStretchBltMode Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SetStretchBltMode" & Chr(34) & " (ByVal hdc As Long, ByVal nStretchMode As Long) As Long"
   Case Is = "setsuspendstate"
       sval = "Declare Function SetSuspendState Lib " & Chr(34) & "Powrprof" & Chr(34) & " (ByVal Hibernate As Long, ByVal ForceCritical As Long, ByVal DisableWakeEvent As Long) As Long"
   Case Is = "setsyscolors"
       sval = "Declare Function SetSysColors Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetSysColors" & Chr(34) & " (ByVal nChanges As Long, lpSysColor As Long, lpColorValues As Long) As Long"
   Case Is = "setsystempowerstate"
       sval = "Declare Function SetSystemPowerState Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal fSuspend As Long, ByVal fForce As Long) As Long"
   Case Is = "setsystemtime"
       sval = "Declare Function SetSystemTime Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetSystemTime" & Chr(34) & " (lpSystemTime As SYSTEMTIME) As Long"
   Case Is = "settapeparameters"
       sval = "Declare Function SetTapeParameters Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetTapeParameters" & Chr(34) & " (ByVal hDevice As Long, ByVal dwOperation As Long, lpTapeInformation As Any) As Long"
   Case Is = "settapeposition"
       sval = "Declare Function SetTapePosition Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetTapePosition" & Chr(34) & " (ByVal hDevice As Long, ByVal dwPositionMethod As Long, ByVal dwPartition As Long, ByVal dwOffsetLow As Long, ByVal dwOffsetHigh As Long, ByVal bimmediate As Long) As Long"
   Case Is = "settextalign"
       sval = "Declare Function SetTextAlign Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "SetTextAlign" & Chr(34) & " (ByVal hdc As Long, ByVal wFlags As Long) As Long"
   Case Is = "settextcharacterextra"
       sval = "Private Declare Function SetTextCharacterExtra Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long, ByVal nCharExtra As Long) As Long"
   Case Is = "settextcolor"
       sval = "Private Declare Function SetTextColor Lib " & Chr(34) & "gdi32" & Chr(34) & " (ByVal hdc As Long, ByVal crColor As Long) As Long"
   Case Is = "setthreadpriority"
       sval = "Declare Function SetThreadPriority Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetThreadPriority" & Chr(34) & " (ByVal hThread As Long, ByVal nPriority As Long) As Long"
   Case Is = "settimer"
       sval = "Declare Function SetTimer Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetTimer" & Chr(34) & " (ByVal hWnd As Long, ByVal nIDEvent As Long, ByVal uElapse As Long, ByVal lpTimerFunc As Long) As Long"
   Case Is = "setupcopyerror"
       sval = "Declare Function SetupCopyError Lib " & Chr(34) & "setupapi.dll" & Chr(34) & " Alias " & Chr(34) & "SetupCopyErrorA" & Chr(34) & " (ByVal hwndParent As Long, ByVal DialogTitle As String, ByVal DiskName As String, ByVal PathToSource As String, ByVal SourceFile As String, ByVal TargetPathFile As String, ByVal Win32ErrorCode As Long, ByVal Style As Long, ByVal PathBuffer As String, ByVal PathBufferSize As Long, ByRef PathRequiredSize As Long) As Long"
   Case Is = "setunhandledexceptionfilter"
       sval = "Declare Function SetUnhandledExceptionFilter Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal lpTopLevelExceptionFilter As Long) As Long"
   Case Is = "setupdeleteerror"
       sval = "Declare Function SetupDeleteError Lib " & Chr(34) & "setupapi.dll" & Chr(34) & " Alias " & Chr(34) & "SetupDeleteErrorA" & Chr(34) & " (ByVal hwndParent As Long, ByVal DialogTitle As String, ByVal File As String, ByVal Win32ErrorCode As Long, ByVal Style As Long) As Long"
   Case Is = "setupdeleteerror"
       sval = "Declare Function SetupDeleteError Lib " & Chr(34) & "setupapi.dll" & Chr(34) & " Alias " & Chr(34) & "SetupDeleteErrorA" & Chr(34) & " (ByVal hwndParent As Long, ByVal DialogTitle As String, ByVal File As String, ByVal Win32ErrorCode As Long, ByVal Style As Long) As Long"
   Case Is = "setuppromptfordisk"
       sval = "Declare Function SetupPromptForDisk Lib " & Chr(34) & "setupapi.dll" & Chr(34) & " Alias " & Chr(34) & "SetupPromptForDiskA" & Chr(34) & " (ByVal hwndParent As Long, ByVal DialogTitle As String, ByVal DiskName As String, ByVal PathToSource As String, ByVal FileSought As String, ByVal TagFile As String, ByVal DiskPromptStyle As Long, ByVal PathBuffer As String, ByVal PathBufferSize As Long, ByRef PathRequiredSize As Long) As Long"
   Case Is = "setuppromptreboot"
       sval = "Declare Function SetupPromptReboot Lib " & Chr(34) & "setupapi.dll" & Chr(34) & " (ByRef FileQueue As Long, ByVal Owner As Long, ByVal ScanOnly As Long) As Long"
   Case Is = "setuprenameerror"
       sval = "Declare Function SetupRenameError Lib " & Chr(34) & "setupapi.dll" & Chr(34) & " Alias " & Chr(34) & "SetupRenameErrorA" & Chr(34) & " (ByVal hwndParent As Long, ByVal DialogTitle As String, ByVal SourceFile As String, ByVal TargetFile As String, ByVal Win32ErrorCode As Long, ByVal Style As Long) As Long"
   Case Is = "setvolumelabel"
       sval = "Declare Function SetVolumeLabel Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SetVolumeLabelA" & Chr(34) & " (ByVal lpRootPathName As String, ByVal lpVolumeName As String) As Long"
   Case Is = "setwindowlong"
       sval = "Declare Function SetWindowLong Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetWindowLongA" & Chr(34) & " (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long"
   Case Is = "setwindowplacement"
       sval = "Declare Function SetWindowPlacement Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hwnd As Long, lpwndpl As WINDOWPLACEMENT) As Long"
   Case Is = "setwindowpos"
       sval = "Declare Function SetWindowPos Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetWindowPos" & Chr(34) & " (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, ByVal wFlags As Long) As Long"
   Case Is = "setwindowrgn"
       sval = "Declare Function SetWindowRgn Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetWindowRgn" & Chr(34) & " (ByVal hWnd As Long, ByVal hRgn As Long, ByVal bRedraw As Boolean) As Long"
   Case Is = "setwindowshookex"
       sval = "Declare Function SetWindowsHookEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetWindowsHookExA" & Chr(34) & " (ByVal idHook As Long, ByVal lpfn As Long, ByVal hmod As Long, ByVal dwThreadId As Long) As Long"
   Case Is = "setwindowtext"
       sval = "Declare Function SetWindowText Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetWindowTextA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpString As String) As Long"
   Case Is = "setwindowword"
       sval = "Declare Function SetWindowWord Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SetWindowWord" & Chr(34) & " (ByVal hwnd As Long, ByVal nIndex As Long, ByVal wNewWord As Long) As Long"
   Case Is = "shaddtorecentdocs"
       sval = "Declare Sub SHAddToRecentDocs Lib " & Chr(34) & "shell32.dll" & Chr(34) & " (ByVal uFlags As Long, ByVal pv As String)"
   Case Is = "shappbarmessage"
       sval = "Declare Function SHAppBarMessage Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "SHAppBarMessage" & Chr(34) & " (ByVal dwMessage As Long, pData As APPBARDATA) As Long"
   Case Is = "shautocomplete"
       sval = "Private Declare Sub SHAutoComplete Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " (ByVal hwndEdit As Long, ByVal dwFlags As Long)"
   Case Is = "shbrowseforfolder"
       sval = "Declare Function SHBrowseForFolder Lib " & Chr(34) & "shell32" & Chr(34) & " (lpbi As BrowseInfo) As Long"
   Case Is = "shchangeicondialog"
       sval = "Declare Function SHChangeIconDialog Lib " & Chr(34) & "shell32" & Chr(34) & " Alias " & Chr(34) & "#62" & Chr(34) & " (ByVal hOwner As Long, ByVal szFilename As String, ByVal Reserved As Long, lpIconIndex As Long) As Long"
   Case Is = "shcreatedirectoryex"
       sval = "Declare Function SHCreateDirectoryEx Lib " & Chr(34) & "shell32" & Chr(34) & " Alias " & Chr(34) & "SHCreateDirectoryExA" & Chr(34) & " (ByVal hwnd As Long, ByVal pszPath As String, ByVal psa As Any) As Long"
   Case Is = "shcreatethread"
       sval = "Declare Function SHCreateThread Lib " & Chr(34) & "shlwapi.dll" & Chr(34) & " (ByVal pfnThreadProc As Long, pData As Any, ByVal dwFlags As Long, ByVal pfnCallback As Long) As Long"
   Case Is = "shell_notifyicon"
       sval = "Declare Function Shell_NotifyIcon Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "Shell_NotifyIconA" & Chr(34) & " (ByVal dwMessage As Long, lpData As NOTIFYICONDATA) As Long"
   Case Is = "shellabout"
       sval = "Declare Function ShellAbout Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "ShellAboutA" & Chr(34) & " (ByVal hwnd As Long, ByVal szApp As String, ByVal szOtherStuff As String, ByVal hIcon As Long) As Long"
   Case Is = "shellexecute"
       sval = "Declare Function ShellExecute Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "ShellExecuteA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long"
   Case Is = "shellexecuteex"
       sval = "Declare Function ShellExecuteEx Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "ShellExecuteEx" & Chr(34) & " (SEI As SHELLEXECUTEINFO) As Long"
   Case Is = "shemptyrecyclebin"
       sval = "Declare Function SHEmptyRecycleBin Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "SHEmptyRecycleBinA" & Chr(34) & " (ByVal hwnd As Long, ByVal pszRootPath As String, ByVal dwFlags As Long) As Long"
   Case Is = "shfileexists"
       sval = "Declare Function SHFileExists Lib " & Chr(34) & "shell32" & Chr(34) & " Alias " & Chr(34) & "#45" & Chr(34) & " (ByVal szPath As String) As Long"
   Case Is = "shfileoperation"
       sval = "Declare Function SHFileOperation Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "SHFileOperationA" & Chr(34) & " (lpFileOp As SHFILEOPSTRUCT) As Long"
   Case Is = "shformatdrive"
       sval = "Declare Function SHFormatDrive Lib " & Chr(34) & "shell32" & Chr(34) & " (ByVal hwndOwner As Long, ByVal iDrive As Long, ByVal iCapacity As Long, ByVal iFormatType As Long) As Long"
   Case Is = "shgetdiskfreespace"
       sval = "Declare Function SHGetDiskFreeSpace Lib " & Chr(34) & "shell32" & Chr(34) & " Alias " & Chr(34) & "SHGetDiskFreeSpaceA" & Chr(34) & " (ByVal pszVolume As String, pqwFreeCaller As Currency, pqwTot As Currency, pqwFree As Currency) As Long"
   Case Is = "shgetfileinfo"
       sval = "Declare Function SHGetFileInfo Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "SHGetFileInfoA" & Chr(34) & " (ByVal pszPath As String, ByVal dwFileAttributes As Long, psfi As SHFILEINFO, ByVal cbFileInfo As Long, ByVal uFlags As Long) As Long"
   Case Is = "shgetpathfromidlist"
       sval = "Declare Function SHGetPathFromIDList Lib " & Chr(34) & "shell32" & Chr(34) & " (ByVal pidList As Long, ByVal lpBuffer As String) As Long"
   Case Is = "shgetspecialfolderlocation"
       sval = "Declare Function SHGetSpecialFolderLocation Lib " & Chr(34) & "shell32.dll" & Chr(34) & " (ByVal hwndOwner As Long, ByVal nFolder As Long, pidl As ITEMIDLIST) As Long"
   Case Is = "showcaret"
       sval = "Declare Function ShowCaret Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ShowCaret" & Chr(34) & " (ByVal hwnd As Long) As Long"
   Case Is = "showcursor"
       sval = "Declare Function ShowCursor Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ShowCursor" & Chr(34) & " (ByVal bShow As Long) As Long"
   Case Is = "showscrollbar"
       sval = "Declare Function ShowScrollBar Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hwnd As Long, ByVal wBar As Long, ByVal bShow As Long) As Long"
   Case Is = "showwindow"
       sval = "Declare Function ShowWindow Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "ShowWindow" & Chr(34) & " (ByVal hwnd As Long, ByVal nCmdShow As Long) As Long"
   Case Is = "shpathisexe"
       sval = "Declare Function SHPathIsExe Lib " & Chr(34) & "shell32" & Chr(34) & " Alias " & Chr(34) & "#43" & Chr(34) & " (ByVal szPath As String) As Long"
   Case Is = "shqueryrecyclebin"
       sval = "Declare Function SHQueryRecycleBin Lib " & Chr(34) & "shell32.dll" & Chr(34) & " Alias " & Chr(34) & "SHQueryRecycleBinA" & Chr(34) & " (ByVal pszRootPath As String, pSHQueryRBInfo As SHQUERYRBINFO) As Long"
   Case Is = "shrestartsystemmb"
       sval = "Declare Function SHRestartSystemMB Lib " & Chr(34) & "shell32" & Chr(34) & " Alias " & Chr(34) & "#59" & Chr(34) & " (ByVal hOwner As Long, ByVal sExtraPrompt As String, ByVal uFlags As Long) As Long"
   Case Is = "shrundialog"
       sval = "Declare Function SHRunDialog Lib " & Chr(34) & "shell32" & Chr(34) & " Alias " & Chr(34) & "#61" & Chr(34) & " (ByVal hOwner As Long, ByVal Unknown1 As Long, ByVal Unknown2 As Long, ByVal szTitle As String, ByVal szPrompt As String, ByVal uFlags As Long) As Long"
   Case Is = "shsetvalue"
       sval = "Declare Function SHSetValue Lib " & Chr(34) & "SHLWAPI.DLL" & Chr(34) & " Alias " & Chr(34) & "SHSetValueA" & Chr(34) & " (ByVal hKey As Long, ByVal pszSubKey As String, ByVal pszValue As String, ByVal dwType As Long, pvData As String, ByVal cbData As Long) As Long"
   Case Is = "shshutdowndialog"
       sval = "Declare Function SHShutDownDialog Lib " & Chr(34) & "shell32" & Chr(34) & " Alias " & Chr(34) & "#60" & Chr(34) & " (ByVal YourGuess As Long) As Long"
   Case Is = "shupdaterecyclebinicon"
       sval = "Declare Function SHUpdateRecycleBinIcon Lib " & Chr(34) & "shell32.dll" & Chr(34) & " () As Long"
   Case Is = "sleep"
       sval = "Declare Sub Sleep Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "Sleep" & Chr(34) & " (ByVal dwMilliseconds As Long)"
   Case Is = "sleepex"
       sval = "Declare Function SleepEx Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SleepEx" & Chr(34) & " (ByVal dwMilliseconds As Long, ByVal bAlertable As Long) As Long"
   Case Is = "sndplaysound"
       sval = "Declare Function sndPlaySound Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "sndPlaySoundA" & Chr(34) & " (ByVal lpszSoundName As String, ByVal uFlags As Long) As Long"
   Case Is = "socket"
       sval = "Declare Function socket Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal af As Long, ByVal s_type As Long, ByVal protocol As Long) As Long"
   Case Is = "socket"
       sval = "Declare Function socket Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal af As Long, ByVal s_type As Long, ByVal protocol As Long) As Long"
   Case Is = "startdoc"
       sval = "Declare Function StartDoc Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "StartDocA" & Chr(34) & " (ByVal hdc As Long, lpdi As DOCINFO) As Long"
   Case Is = "startpage"
       sval = "Declare Function StartPage Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "StartPage" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "stretchblt"
       sval = "Declare Function StretchBlt Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "StretchBlt" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hSrcDC As Long, ByVal xSrc As Long, ByVal ySrc As Long, ByVal nSrcWidth As Long, ByVal nSrcHeight As Long, ByVal dwRop As Long) As Long"
   Case Is = "strokeandfillpath"
       sval = "Declare Function StrokeAndFillPath Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "StrokeAndFillPath" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "strokepath"
       sval = "Declare Function StrokePath Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "StrokePath" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "subtractrect"
       sval = "Declare Function SubtractRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SubtractRect" & Chr(34) & " (lprcDst As RECT, lprcSrc1 As RECT, lprcSrc2 As RECT) As Long"
   Case Is = "swapmousebutton"
       sval = "Declare Function SwapMouseButton Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SwapMouseButton" & Chr(34) & " (ByVal bSwap As Long) As Long"
   Case Is = "switchtothread"
       sval = "Declare Function SwitchToThread Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " () As Long"
   Case Is = "systemparametersinfo"
       sval = "Declare Function SystemParametersInfo Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "SystemParametersInfoA" & Chr(34) & " (ByVal uAction As Long, ByVal uParam As Long, ByVal lpvParam As Any, ByVal fuWinIni As Long) As Long"
   Case Is = "systemtimetofiletime"
       sval = "Declare Function SystemTimeToFileTime Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "SystemTimeToFileTime" & Chr(34) & " (lpSystemTime As SYSTEMTIME, lpFileTime As FILETIME) As Long"
   Case Is = "tabbedtextout"
       sval = "Declare Function TabbedTextOut Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "TabbedTextOutA" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal lpString As String, ByVal nCount As Long, ByVal nTabPositions As Long, lpnTabStopPositions As Long, ByVal nTabOrigin As Long) As Long"
   Case Is = "terminatethread"
       sval = "Declare Function TerminateThread Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal hThread As Long, ByVal dwExitCode As Long) As Long"
   Case Is = "textout"
       sval = "Declare Function TextOut Lib " & Chr(34) & "gdi32" & Chr(34) & " Alias " & Chr(34) & "TextOutA" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal lpString As String, ByVal nCount As Long) As Long"
   Case Is = "timegettime"
       sval = "Private Declare Function timeGetTime Lib " & Chr(34) & "winmm.dll" & Chr(34) & " () As Long"
   Case Is = "timekillevent"
       sval = "Declare Function timeKillEvent Lib " & Chr(34) & "winmm.dll" & Chr(34) & " (ByVal uID As Long) As Long"
   Case Is = "timesetevent"
       sval = "Declare Function timeSetEvent Lib " & Chr(34) & "winmm.dll" & Chr(34) & " (ByVal uDelay As Long, ByVal uResolution As Long, ByVal lpFunction As Long, ByVal dwUser As Long, ByVal uFlags As Long) As Long"
   Case Is = "touchfiletimes"
       sval = "Declare Function TouchFileTimes Lib " & Chr(34) & "imagehlp.dll" & Chr(34) & " (ByVal FileHandle As Long, ByRef pSystemTime As Any) As Long"
   Case Is = "trackmouseevent"
       sval = "Declare Function TrackMouseEvent Lib " & Chr(34) & "user32" & Chr(34) & " (lpEventTrack As TRACKMOUSEEVENTTYPE) As Long"
   Case Is = "trackmouseevent2"
       sval = "Declare Function TrackMouseEvent2 Lib " & Chr(34) & "comctl32" & Chr(34) & " Alias " & Chr(34) & "_TrackMouseEvent" & Chr(34) & " (lpEventTrack As TRACKMOUSEEVENTTYPE) As Long"
   Case Is = "trackpopupmenu"
       sval = "Declare Function TrackPopupMenu Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "TrackPopupMenu" & Chr(34) & " (ByVal hMenu As Long, ByVal wFlags As Long, ByVal x As Long, ByVal y As Long, ByVal nReserved As Long, ByVal hwnd As Long, lprc As Rect) As Long"
   Case Is = "trackpopupmenuex"
       sval = "Declare Function TrackPopupMenuEx Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hMenu As Long, ByVal wFlags As Long, ByVal x As Long, ByVal y As Long, ByVal HWnd As Long, ByVal lptpm As Any) As Long"
   Case Is = "translatecolor"
       sval = "Declare Function TranslateColor Lib " & Chr(34) & "olepro32.dll" & Chr(34) & " Alias " & Chr(34) & "OleTranslateColor" & Chr(34) & " (ByVal clr As OLE_COLOR, ByVal palet As Long, col As Long) As Long"
   Case Is = "transparentblt"
       sval = "Declare Function TransparentBlt Lib " & Chr(34) & "msimg32.dll" & Chr(34) & " (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hSrcDC As Long, ByVal xSrc As Long, ByVal ySrc As Long, ByVal nSrcWidth As Long, ByVal nSrcHeight As Long, ByVal crTransparent As Long) As Boolean"
   Case Is = "unhookwindowshookex"
       sval = "Declare Function UnhookWindowsHookEx Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "UnhookWindowsHookEx" & Chr(34) & " (ByVal hHook As Long) As Long"
   Case Is = "uninitializeflatsb"
       sval = "Declare Function UninitializeFlatSB Lib " & Chr(34) & "comctl32" & Chr(34) & " (ByVal hWnd As Long) As Long"
   Case Is = "unionrect"
       sval = "Declare Function UnionRect Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "UnionRect" & Chr(34) & " (lpDestRect As RECT, lpSrc1Rect As RECT, lpSrc2Rect As RECT) As Long"
   Case Is = "unregisterclass"
       sval = "Declare Function UnregisterClass Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "UnregisterClassA" & Chr(34) & " (ByVal lpClassName As String, ByVal hInstance As Long) As Long"
   Case Is = "unregisterhotkey"
       sval = "Declare Function UnregisterHotKey Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "UnregisterHotKey" & Chr(34) & " (ByVal hwnd As Long, ByVal id As Long) As Long"
   Case Is = "urldownloadtofile"
       sval = "Declare Function URLDownloadToFile Lib " & Chr(34) & "urlmon" & Chr(34) & " Alias " & Chr(34) & "URLDownloadToFileA" & Chr(34) & " (ByVal pCaller As Long, ByVal szURL As String, ByVal szFileName As String, ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long"
   Case Is = "uuidcreate"
       sval = "Declare Function UuidCreate Lib " & Chr(34) & "rpcrt4" & Chr(34) & " (lpUUID As UUID) As Long"
   Case Is = "uuidtostring"
       sval = "Declare Function UuidToString Lib " & Chr(34) & "rpcrt4" & Chr(34) & " Alias " & Chr(34) & "UuidToStringA" & Chr(34) & " (lpUUID As UUID, lpUUIDString As Long) As Long"
   Case Is = "varptrany"
       sval = "Declare Function VarPtrAny Lib " & Chr(34) & "vb40032.dll" & Chr(34) & " Alias " & Chr(34) & "VarPtr" & Chr(34) & " (lpObject As Any) As Long"
   Case Is = "vdmenumprocesswow"
       sval = "Function VDMEnumProcessWOW Lib " & Chr(34) & "VDMDBG.dll" & Chr(34) & " (ByVal fp As Long, lparam As Long) As Integer"
   Case Is = "vdmenumtaskwowex"
       sval = "Function VDMEnumTaskWOWEx Lib " & Chr(34) & "VDMDBG.dll" & Chr(34) & " (dwProcessId As Long, ByVal fp As Long, lparam As Long) As Integer"
   Case Is = "verifyscreensavepwd"
       sval = "Declare Function VerifyScreenSavePwd Lib " & Chr(34) & "password.cpl" & Chr(34) & " (ByVal hwnd As Long) As Boolean"
   Case Is = "verlanguagename"
       sval = "Declare Function VerLanguageName Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "VerLanguageNameA" & Chr(34) & " (ByVal wLang As Long, ByVal szLang As String, ByVal nSize As Long) As Long"
   Case Is = "virtualalloc"
       sval = "Declare Function VirtualAlloc Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal lpAddress As Long, ByVal dwSize As Long, ByVal flAllocationType As Long, ByVal flProtect As Long) As Long"
   Case Is = "virtualfree"
       sval = "Declare Function VirtualFree Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal lpAddress As Long, ByVal dwSize As Long, ByVal dwFreeType As Long) As Long"
   Case Is = "virtualunlock"
       sval = "Declare Function VirtualUnlock Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal lpAddress As Long, ByVal dwSize As Long) As Long"
   Case Is = "waitforsingleobject"
       sval = "Declare Function WaitForSingleObject Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "WaitForSingleObject" & Chr(34) & " (ByVal hHandle As Long, ByVal dwMilliseconds As Long) As Long"
   Case Is = "waitmessage"
       sval = "Declare Function WaitMessage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "WaitMessage" & Chr(34) & " () As Long"
   Case Is = "waitmessage"
       sval = "Declare Function WaitMessage Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "WaitMessage" & Chr(34) & " () As Long"
   Case Is = "waveinaddbuffer"
       sval = "Declare Function waveInAddBuffer Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInAddBuffer" & Chr(34) & " (ByVal hWaveIn As Long, lpWaveInHdr As WAVEHDR, ByVal uSize As Long) As Long"
   Case Is = "waveinclose"
       sval = "Declare Function waveInClose Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInClose" & Chr(34) & " (ByVal hWaveIn As Long) As Long"
   Case Is = "waveingetdevcaps"
       sval = "Declare Function waveInGetDevCaps Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInGetDevCapsA" & Chr(34) & " (ByVal uDeviceID As Long, lpCaps As WAVEINCAPS, ByVal uSize As Long) As Long"
   Case Is = "waveingeterrortext"
       sval = "Declare Function waveInGetErrorText Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInGetErrorTextA" & Chr(34) & " (ByVal err As Long, ByVal lpText As String, ByVal uSize As Long) As Long"
   Case Is = "waveingetnumdevs"
       sval = "Declare Function waveInGetNumDevs Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInGetNumDevs" & Chr(34) & " () As Long"
   Case Is = "waveinopen"
       sval = "Declare Function waveInOpen Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInOpen" & Chr(34) & " (lphWaveIn As Long, ByVal uDeviceID As Long, lpFormat As WAVEFORMAT, ByVal dwCallback As Long, ByVal dwInstance As Long, ByVal dwFlags As Long) As Long"
   Case Is = "waveinprepareheader"
       sval = "Declare Function waveInPrepareHeader Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInPrepareHeader" & Chr(34) & " (ByVal hWaveIn As Long, lpWaveInHdr As WAVEHDR, ByVal uSize As Long) As Long"
   Case Is = "waveinreset"
       sval = "Declare Function waveInReset Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInReset" & Chr(34) & " (ByVal hWaveIn As Long) As Long"
   Case Is = "waveinstart"
       sval = "Declare Function waveInStart Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInStart" & Chr(34) & " (ByVal hWaveIn As Long) As Long"
   Case Is = "waveinstop"
       sval = "Declare Function waveInStop Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInStop" & Chr(34) & " (ByVal hWaveIn As Long) As Long"
   Case Is = "waveinunprepareheader"
       sval = "Declare Function waveInUnprepareHeader Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveInUnprepareHeader" & Chr(34) & " (ByVal hWaveIn As Long, lpWaveInHdr As WAVEHDR, ByVal uSize As Long) As Long"
   Case Is = "waveoutclose"
       sval = "Declare Function waveOutClose Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutClose" & Chr(34) & " (ByVal hWaveOut As Long) As Long"
   Case Is = "waveoutgetdevcaps"
       sval = "Declare Function waveOutGetDevCaps Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutGetDevCapsA" & Chr(34) & " (ByVal uDeviceID As Long, lpCaps As WAVEOUTCAPS, ByVal uSize As Long) As Long"
   Case Is = "waveoutgeterrortext"
       sval = "Declare Function waveOutGetErrorText Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutGetErrorTextA" & Chr(34) & " (ByVal err As Long, ByVal lpText As String, ByVal uSize As Long) As Long"
   Case Is = "waveoutgetnumdevs"
       sval = "Declare Function waveOutGetNumDevs Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutGetNumDevs" & Chr(34) & " () As Long"
   Case Is = "waveoutgetposition"
       sval = "Declare Function waveOutGetPosition Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutGetPosition" & Chr(34) & " (ByVal hWaveOut As Long, lpInfo As MMTIME, ByVal uSize As Long) As Long"
   Case Is = "waveoutgetvolume"
       sval = "Declare Function waveOutGetVolume Lib " & Chr(34) & "Winmm" & Chr(34) & " (ByVal wDeviceID As Integer, dwVolume As Long) As Integer"
   Case Is = "waveoutopen"
       sval = "Declare Function waveOutOpen Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutOpen" & Chr(34) & " (lphWaveOut As Long, ByVal uDeviceID As Long, lpFormat As WAVEFORMAT, ByVal dwCallback As Long, ByVal dwInstance As Long, ByVal dwFlags As Long) As Long"
   Case Is = "waveoutprepareheader"
       sval = "Declare Function waveOutPrepareHeader Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutPrepareHeader" & Chr(34) & " (ByVal hWaveOut As Long, lpWaveOutHdr As WAVEHDR, ByVal uSize As Long) As Long"
   Case Is = "waveoutreset"
       sval = "Declare Function waveOutReset Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutReset" & Chr(34) & " (ByVal hWaveOut As Long) As Long"
   Case Is = "waveoutsetvolume"
       sval = "Declare Function waveOutSetVolume Lib " & Chr(34) & "Winmm" & Chr(34) & " (ByVal wDeviceID As Integer, ByVal dwVolume As Long) As Integer"
   Case Is = "waveoutunprepareheader"
       sval = "Declare Function waveOutUnprepareHeader Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutUnprepareHeader" & Chr(34) & " (ByVal hWaveOut As Long, lpWaveOutHdr As WAVEHDR, ByVal uSize As Long) As Long"
   Case Is = "waveoutwrite"
       sval = "Declare Function waveOutWrite Lib " & Chr(34) & "winmm.dll" & Chr(34) & " Alias " & Chr(34) & "waveOutWrite" & Chr(34) & " (ByVal hWaveOut As Long, lpWaveOutHdr As WAVEHDR, ByVal uSize As Long) As Long"
   Case Is = "widechartomultibyte"
       sval = "Declare Function WideCharToMultiByte Lib " & Chr(34) & "kernel32" & Chr(34) & " (ByVal codepage As Long, ByVal dwFlags As Long, lpWideCharStr As Any, ByVal cchWideChar As Long, lpMultiByteStr As Any, ByVal cchMultiByte As Long, ByVal lpDefaultChar As String, ByVal lpUsedDefaultChar As Long) As Long"
   Case Is = "windowfromdc"
       sval = "Declare Function WindowFromDC Lib " & Chr(34) & "user32" & Chr(34) & " (ByVal hdc As Long) As Long"
   Case Is = "windowfrompoint"
       sval = "Declare Function WindowFromPoint Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "WindowFromPoint" & Chr(34) & " (ByVal xPoint As Long, ByVal yPoint As Long) As Long"
   Case Is = "winexec"
       sval = "Declare Function WinExec Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "WinExec" & Chr(34) & " (ByVal lpCmdLine As String, ByVal nCmdShow As Long) As Long"
   Case Is = "winhelp"
       sval = "Declare Function WinHelp Lib " & Chr(34) & "user32" & Chr(34) & " Alias " & Chr(34) & "WinHelpA" & Chr(34) & " (ByVal hwnd As Long, ByVal lpHelpFile As String, ByVal wCommand As Long, ByVal dwData As Long) As Long"
   Case Is = "wnetaddconnection"
       sval = "Declare Function WNetAddConnection Lib " & Chr(34) & "mpr.dll" & Chr(34) & " Alias " & Chr(34) & "WNetAddConnectionA" & Chr(34) & " (ByVal lpszNetPath As String, ByVal lpszPassword As String, ByVal lpszLocalName As String) As Long"
   Case Is = "wnetaddconnection2"
       sval = "Declare Function WNetAddConnection2 Lib " & Chr(34) & "mpr.dll" & Chr(34) & " Alias " & Chr(34) & "WNetAddConnection2A" & Chr(34) & " (lpNetResource As NETRESOURCE, ByVal lpPassword As String, ByVal lpUserName As String, ByVal dwFlags As Long) As Long"
   Case Is = "wnetcancelconnection"
       sval = "Declare Function WNetCancelConnection Lib " & Chr(34) & "mpr.dll" & Chr(34) & " Alias " & Chr(34) & "WNetCancelConnectionA" & Chr(34) & " (ByVal lpszName As String, ByVal bForce As Long) As Long"
   Case Is = "wnetcancelconnection2"
       sval = "Declare Function WNetCancelConnection2 Lib " & Chr(34) & "mpr.dll" & Chr(34) & " Alias " & Chr(34) & "WNetCancelConnection2A" & Chr(34) & " (ByVal lpName As String, ByVal dwFlags As Long, ByVal fForce As Long) As Long"
   Case Is = "wnetenumresource"
       sval = "Declare Function WNetEnumResource Lib " & Chr(34) & "mpr.dll" & Chr(34) & " Alias " & Chr(34) & "WNetEnumResourceA" & Chr(34) & " (ByVal hEnum As Long, lpcCount As Long, lpBuffer As Any, lpBufferSize As Long) As Long"
   Case Is = "wnetgetconnection"
       sval = "Private Declare Function WNetGetConnection Lib " & Chr(34) & "mpr.dll" & Chr(34) & " Alias " & Chr(34) & "WNetGetConnectionA" & Chr(34) & " (ByVal lpszLocalName As String, ByVal lpszRemoteName As String, cbRemoteName As Long) As Long"
   Case Is = "wnetgetuser"
       sval = "Declare Function WNetGetUser Lib " & Chr(34) & "mpr.dll" & Chr(34) & " Alias " & Chr(34) & "WNetGetUserA" & Chr(34) & " (ByVal lpName As String, ByVal lpUserName As String, lpnLength As Long) As Long"
   Case Is = "wnetopenenum"
       sval = "Declare Function WNetOpenEnum Lib " & Chr(34) & "mpr.dll" & Chr(34) & " Alias " & Chr(34) & "WNetOpenEnumA" & Chr(34) & " (ByVal dwScope As Long, ByVal dwType As Long, ByVal dwUsage As Long, lpNetResource As NETRESOURCE, lphEnum As Long) As Long"
   Case Is = "writeconsole"
       sval = "Declare Function WriteConsole Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "WriteConsoleA" & Chr(34) & " (ByVal hConsoleOutput As Long, lpBuffer As Any, ByVal nNumberOfCharsToWrite As Long, lpNumberOfCharsWritten As Long, lpReserved As Any) As Long"
   Case Is = "writefile"
       sval = "Declare Function WriteFile Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "WriteFile" & Chr(34) & " (ByVal hFile As Long, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, lpOverlapped As OVERLAPPED) As Long"
   Case Is = "writeprivateprofilesection"
       sval = "Declare Function WritePrivateProfileSection Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "WritePrivateProfileSectionA" & Chr(34) & " (ByVal lpAppName As String, ByVal lpString As String, ByVal lpFileName As String) As Long"
   Case Is = "writeprivateprofilestring"
       sval = "Declare Function WritePrivateProfileString Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "WritePrivateProfileStringA" & Chr(34) & " (ByVal lpApplicationName As String, ByVal lpKeyName As Any, ByVal lpString As Any, ByVal lpFileName As String) As Long"
   Case Is = "writeprofilestring"
       sval = "Declare Function WriteProfileString Lib " & Chr(34) & "kernel32" & Chr(34) & " Alias " & Chr(34) & "WriteProfileStringA" & Chr(34) & " (ByVal lpszSection As String, ByVal lpszKeyName As String, ByVal lpszString As String) As Long"
   Case Is = "wsaasyncselect"
       sval = "Declare Function WSAAsyncSelect Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " (ByVal s As Long, ByVal hwnd As Long, ByVal wMsg As Long, ByVal lEvent As Long) As Long"
   Case Is = "wsacancelblockingcall"
       sval = "Declare Function WSACancelBlockingCall Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " () As Long"
   Case Is = "wsacancelblockingcall"
       sval = "Declare Function WSACancelBlockingCall Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " () As Long"
   Case Is = "wsacleanup"
       sval = "Declare Function WSACleanup Lib " & Chr(34) & "WSOCK32" & Chr(34) & " () As Long"
   Case Is = "wsagetlasterror"
       sval = "Declare Function WSAGetLastError Lib " & Chr(34) & "WSOCK32" & Chr(34) & " () As Long"
   Case Is = "wsaisblocking"
       sval = "Declare Function WSAIsBlocking Lib " & Chr(34) & "wsock32.dll" & Chr(34) & " () As Long"
   Case Is = "wsastartup"
       sval = "Declare Function WSAStartup Lib " & Chr(34) & "WSOCK32" & Chr(34) & " (ByVal wVersionRequired As Long, lpWSADATA As WSAData) As Long"
   Case Is = "zeromemory"
       sval = "Declare Sub ZeroMemory Lib " & Chr(34) & "kernel32.dll" & Chr(34) & " Alias " & Chr(34) & "RtlZeroMemory" & Chr(34) & " (Destination As Any, ByVal Length As Long)"
   Case Else
       sval = ""
End Select

returnApiZ = sval
  
End Function

